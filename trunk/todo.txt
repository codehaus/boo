* a lista de tarefas migrou para http://bamboo.is-a-geek.org:8080/boo/wiki/TodoList

Geração de Código
=================

Milestone 1 (hello.boo)
-----------------------

done * bultins
done * local variables
done * expression interpolation (string formatting)
 
Milestone 2 (debug)
-------------------

done * line numbers na vers�o de depura��o
done * depurar com o mscordbg

Milestone 3 (helloforms.boo - using, métodos estáticos, criação de objetos)
---------------------------------------------------------------------------
done * using XXX from XXX
done * criar objeto (ConstructorBinding)
done * membros de instancia (f.Show())
done * argumentos nomeados na criação de objetos
done * membros estáticos Application.Run()
done * resolução de métodos por argumentos de tipo compatível
done * simplificar código:
	done * InternalTypeBinding e ExternalTypeBinding implements INameSpace: unificar codigo;
	done * o mesmo para InternalMethodBinding;
done * propriedades simples (f.Controls)

Milestone 3.1 (grep.boo)
----------------------

done * definição de métodos do módulo
done * chamada de métodos do módulo
done * checagem de parametros estrita nas invocaçoes de método
done * array unpacking
* for item in enumerator
* native regular expression support:
	* re expression /foo/
	* match operator ~=
* if stmt modifier
* expressões simples com inteiros
* boxing (print e StringFormatting)
* criar ModuleBinding e unificar com ModuleNamespace;
* simplificar tratamento de erro em SemanticStep;

Milestone 3.2 (replace.boo)
---------------------------
* if string compare
* using

Milestone 3.3
-------------
* raise
* concatena��o de strings
* concatena��o de strings com inteiros
* statement modifiers:
	* if
	* unless
	* while
	* until

Milestone 4
-----------

* classes
* declara��o de campos
* declara��o de propriedades
* defini��o de m�todos
* classes devem ser serializ�veis
* cria��o de objetos (classes internas)
* chamada de m�todos est�ticos (classes internas)
* chamada de m�todos instance
* null expression
* assert statement
* tuples (arrays) - operador v�rgula => a = 3, 5
* tuple unpacking - a, b  = 3, 5
* tuple indexing (a[0] = 1)
* for item in tuple
* property access
* property assignment
* list creation [1, 2, 3]
* list indexing
* bool (true, false)
* operadores de convers�o (operator bool, operator string, etc)

Milestone 5 (delegate support)
------------------------------

* automatic delegation instance creation
* automatic delegation interface adaptation

Milestone 6
-----------

* enum
* interface
* property

Otimiza��es
-----------
* const expression unfolding
* proper tail recursion (fatorial)
* for item in array/tuple => traduzir indexaçãoo direta do array com checagem de
bounds, o JIT é capaz de detectar esses patterns e otimizar o c�digo de acordo
