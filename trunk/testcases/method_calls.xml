<?xml version="1.0" encoding="utf-8"?>
<Module xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <Modifiers>None</Modifiers>
  <Name>method_calls</Name>
  <Attributes />  
  <Members />
  <BaseTypes />
  <Using />
  <Globals>
    <Statements>
      <Statement xsi:type="ExpressionStatement">
	  	<Expression xsi:type="MethodInvocationExpression">
				<Target xsi:type="ReferenceExpression">
					<Name>assert</Name>
				</Target>
		<Arguments>
			<Expression xsi:type="BinaryExpression">
			  <Operator>Equality</Operator>
			  <Left xsi:type="StringLiteralExpression">
				<Value>FOO</Value>
			  </Left>
			  <Right xsi:type="MethodInvocationExpression">
				<Target xsi:type="MemberReferenceExpression">			
				  <Name>ToUpper</Name>				  
				  <Target xsi:type="StringLiteralExpression">
					<Value>foo</Value>
				  </Target>
				</Target>
				<Arguments />
				<NamedArguments />
				</Right>				
			</Expression>			
		</Arguments>
		<NamedArguments />				
		</Expression>
      </Statement>
      <Statement xsi:type="ExpressionStatement">
	  	<Expression xsi:type="MethodInvocationExpression">
				<Target xsi:type="ReferenceExpression">
					<Name>assert</Name>
				</Target>
		<Arguments>
        <Expression xsi:type="BinaryExpression">
          <Operator>Equality</Operator>
          <Left xsi:type="StringLiteralExpression">
            <Value>[1, 2, 3]</Value>
          </Left>
          <Right xsi:type="MethodInvocationExpression">
            <Target xsi:type="MemberReferenceExpression">			
              <Name>ToString</Name>
              <Target xsi:type="ListLiteralExpression">
                <Items>
                  <Expression xsi:type="IntegerLiteralExpression">
                    <Value>1</Value>
                  </Expression>
                  <Expression xsi:type="IntegerLiteralExpression">
                    <Value>2</Value>
                  </Expression>
                  <Expression xsi:type="IntegerLiteralExpression">
                    <Value>3</Value>
                  </Expression>
                </Items>
              </Target>
            </Target>
			<Arguments />
			<NamedArguments />
          </Right>
        </Expression>
		</Arguments>
		<NamedArguments />
		</Expression>
      </Statement>
      <Statement xsi:type="ExpressionStatement">
	  	<Expression xsi:type="MethodInvocationExpression">
				<Target xsi:type="ReferenceExpression">
					<Name>assert</Name>
				</Target>
		<Arguments>
        <Expression xsi:type="BinaryExpression">
          <Operator>Equality</Operator>
          <Left xsi:type="StringLiteralExpression">
            <Value>14</Value>
          </Left>
          <Right xsi:type="MethodInvocationExpression">
            <Target xsi:type="MemberReferenceExpression">			
              <Name>ToString</Name>
              <Target xsi:type="IntegerLiteralExpression">
                <Value>14</Value>
              </Target>
            </Target>
			<Arguments />
			<NamedArguments />
          </Right>
        </Expression>
		</Arguments>
		<NamedArguments />
		</Expression>
      </Statement>
      <Statement xsi:type="ExpressionStatement">
	  	<Expression xsi:type="MethodInvocationExpression">
				<Target xsi:type="ReferenceExpression">
					<Name>assert</Name>
				</Target>
		<Arguments>
        <Expression xsi:type="BinaryExpression">
          <Operator>Equality</Operator>
          <Left xsi:type="StringLiteralExpression">
            <Value>4</Value>
          </Left>
          <Right xsi:type="MethodInvocationExpression">
            <Target xsi:type="MemberReferenceExpression">			
              <Name>ToString</Name>
              <Target xsi:type="BinaryExpression">
                <Operator>Add</Operator>
                <Left xsi:type="IntegerLiteralExpression">
                  <Value>2</Value>
                </Left>
                <Right xsi:type="IntegerLiteralExpression">
                  <Value>2</Value>
                </Right>
              </Target>
            </Target>
			<Arguments />
			<NamedArguments />
          </Right>
        </Expression>
		</Arguments>
		<NamedArguments />
		</Expression>
      </Statement>
      <Statement xsi:type="ExpressionStatement">
        <Expression xsi:type="MethodInvocationExpression">
          <Target xsi:type="ReferenceExpression">
            <Name>print</Name>
          </Target>
          <Arguments>
            <Expression xsi:type="StringLiteralExpression">
              <Value>done!</Value>
            </Expression>
          </Arguments>
		  <NamedArguments />
        </Expression>
      </Statement>
    </Statements>
  </Globals>
</Module>