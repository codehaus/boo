<?xml version="1.0"?>
<project name="boox" default="run">

	<property name="boo.dir" value="${path::get-full-path('../../bin')}" />
	<property name="sharpd.dir" value="${path::get-full-path('/dotnet/SharpWT/SharpDevelop/bin')}" />
	
	<include buildfile="build.properties" if="${file::exists('build.properties')}" />

	<target name="run" depends="compile">
		<exec program="build/boox.exe" useruntimeengine="true">
		</exec>
	</target>
	
	<target name="distro" depends="compile">
		<zip zipfile="boox.zip">
			<fileset>
				<include name="boox.build" />
				<include name="src/*.boo" />
				<include name="resources/**/*.png" />
				<include name="build/*.dll" />
				<include name="build/boox.exe" />
			</fileset>
		</zip>
	</target>
	
	<target name="compile" depends="init, create-resources">
		<booc
			output="build/boox.exe"
			target="winexe"
			tracelevel="Info">
			<sources basedir="src">
				<include name="*.boo" />
			</sources> 
			
			<resources basedir="build">
				<include name="*.resources" />
			</resources>
			
			<references basedir="build">
				<include name="ICSharpCode.TextEditor.dll" />
				<include name="WeifenLuo.WinFormsUI.dll" />
				<include name="System.Windows.Forms.dll" />
				<include name="System.Drawing.dll" />
			</references>
		</booc>
	</target>
	
	<target name="create-resources" depends="init">
		<boo>
		import System.IO
		import System.Resources
		import System.Windows.Forms from System.Windows.Forms
		import System.Drawing from System.Drawing
		
		def MapPath(path):
			return Path.Combine(Project.BaseDirectory, path)
					
		def CreateImageList():
			imageList = ImageList()
			images = (
					"namespace.png",
					"class.png",
					"interface.png",
					"enum.png",
					"field.png",
					"property.png",
					"method.png",
					"internalclass.png",
					"internalinterface.png",
					"internalenum.png",
					"internalfield.png",
					"internalproperty.png",
					"internalmethod.png",
					"protectedclass.png",
					"protectedinterface.png",
					"protectedenum.png",
					"protectedfield.png",
					"protectedproperty.png",
					"protectedmethod.png",
					"privateclass.png",
					"privateinterface.png",
					"privateenum.png",
					"privatefield.png",
					"privateproperty.png",
					"privatemethod.png"
				)
			for image in images:
				fname = MapPath("resources/ClassBrowserIcons/${image}")
				imageList.Images.Add(Image.FromFile(fname))
			return imageList
		
		using imageList=CreateImageList():
			using writer=ResourceWriter(MapPath("build/BooExplorer.DocumentOutline.resources")):
				writer.AddResource("_imageList", imageList.ImageStream)
		</boo>
	</target>
	
	<target name="init">

		<echo if="${not directory::exists(sharpd.dir)}">
		Please, create a file named build.properties and define the
		property sharpd.dir pointing to the bin folder of the SharpDevelop
		distribution or manually copy the files ICSharpCode.TextEditor.dll and
		WeinfenLuo.WinFormsUI.dll to the build folder.
		</echo>
		
		<mkdir dir="build" />
		
		<call target="update-boo-libs" if="${directory::exists(boo.dir)}" />
		
		<call target="update-sharpd-libs" if="${directory::exists(sharpd.dir)}" />
		
		<loadtasks assembly="build/Boo.NAnt.dll" />
	</target>
	
	<target name="update-boo-libs">
		<copy todir="build">
			<fileset basedir="${boo.dir}">
				<include name="*.dll" />
				<include name="*.pdb" />
				<exclude name="*.Tests.dll" />
				<exclude name="*.Tests.pdb" />
				<exclude name="nunit.framework.dll" />
			</fileset>
		</copy>		
		<copy todir="build" file="../SharpDevelop/boo.xshd">
		</copy>
	</target>
	
	<target name="update-sharpd-libs">
		<copy todir="build">
			<fileset basedir="${sharpd.dir}">
				<include name="ICSharpCode.TextEditor.dll" />				
				<include name="WeifenLuo.WinFormsUI.dll" />
			</fileset>
		</copy>
	</target>

</project>
