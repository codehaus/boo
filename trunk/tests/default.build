<?xml version="1.0"?>
<project name="tests" default="run">

	<!-- find out where nunit.framework.dll is -->
	<property name="lib.dir"
		value="${path::combine(nant::get-base-directory(), 'lib')}"
		dynamic="true" />
		
    <property name="lib.family.dir"
		value="${path::combine(lib.dir,framework::get-family(framework::get-target-framework()))}"
		dynamic="true" />
		
    <property name="lib.framework.dir"
		value="${path::combine(lib.family.dir, framework::get-version(framework::get-target-framework()))}"
		dynamic="true" />
		
	<property name="nunit.framework.dll"
			value="${path::combine(lib.framework.dir, 'nunit.framework.dll')}" />

	<property name="nant.tasks.nunit2"
			value="False"
			unless="${property::exists('nant.tasks.nunit2')}" />	

	<target name="run" depends="compile" if="${nant.tasks.nunit2}">

		<nunit2>       
			<formatter type="Plain" />
			<test>
				<assemblies basedir="build">
					<include name="Boo.AntlrParser.Tests.dll" />
					<include name="Boo.Tests.dll" />
					<include name="Boo.Lang.Compiler.Tests.dll" />
					<include name="BooCompiler.Tests.dll" />					
					<include name="BooCompilerResources.Tests.dll" />					
					<include name="Regression.Tests.dll" />
				</assemblies>
			</test>
		</nunit2>
		
	</target>
	
	<target name="compile" depends="init">	
	
		<boo src="generate_regression.boo" />
		
		<csc
			target="library"
			output="build/BooCompiler.Tests.dll">
			
			<sources>
				<include name="BooCompiler.Tests/**/*.cs" />
				<include name="build/RegressionTestFixture.cs" />
			</sources>
			
			<references basedir="build">
				<include name="${nunit.framework.dll}" />
				<include name="Boo.dll" />
				<include name="Boo.Lang.Compiler.dll" />
			</references>
		</csc>
	
		<booc
			target="library"
			output="build/Boo.Tests.dll">

			<sources basedir="Boo.Tests">
				<include name="**/*.boo" />
			</sources>

			<references>
				<include name="${nunit.framework.dll}" />
			</references>
		</booc>
		
		<booc
			target="library"
			output="build/Boo.Lang.Compiler.Tests.dll">
			
			<sources basedir="Boo.Lang.Compiler.Tests">
				<include name="**/*.boo" />
			</sources>
			
			<references>
				<include name="${nunit.framework.dll}" />
			</references>
		</booc>
		
		<booc
			target="library"
			output="build/BooCompilerResources.Tests.dll">
			
			<sources basedir="BooCompilerResources.Tests">
				<include name="**/*.boo" />
			</sources>
			
			<references>
				<include name="${nunit.framework.dll}" />
			</references>
		</booc>		
		
		<csc
			target="library"
			output="build/Boo.AntlrParser.Tests.dll">
			
			<sources basedir="Boo.AntlrParser.Tests">
				<include name="**/*.cs" />
			</sources>
			
			<references basedir="build">
				<include name="${nunit.framework.dll}" />
				<include name="BooCompiler.Tests.dll" />
				<include name="Boo.Lang.Compiler.dll" />				
				<include name="Boo.AntlrParser.dll" />
				<include name="antlr.runtime.dll" />
			</references>			
		</csc>
	</target>
	
	<target name="init">
		<delete dir="build" if="${directory::exists('build')}" />
		<mkdir dir="build" />
		<copy todir="build">
			<fileset basedir="../build">
				<include name="*.dll" />
				<include name="pt/*.dll" />
			</fileset>
		</copy>
		<copy todir="build" file="${nunit.framework.dll}" />
		<loadtasks assembly="build/Boo.NAnt.dll" />
	</target>
</project>
