System.Console.WriteLine('* a lista de tarefas migrou para http://bamboo.is-a-geek.org:8080/boo/wiki/TodoList')
System.Console.WriteLine('')
System.Console.WriteLine('Gera�ao de C�digo')
System.Console.WriteLine('=================')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 1 (hello.boo)')
System.Console.WriteLine('-----------------------')
System.Console.WriteLine('')
System.Console.WriteLine('done * bultins')
System.Console.WriteLine('done * local variables')
System.Console.WriteLine('done * expression interpolation (string formatting)')
System.Console.WriteLine(' ')
System.Console.WriteLine('Milestone 2 (debug)')
System.Console.WriteLine('-------------------')
System.Console.WriteLine('')
System.Console.WriteLine('done * line numbers na vers?o de depura??o')
System.Console.WriteLine('done * depurar com o mscordbg')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3 (helloforms.boo - using, m�todos est�ticos, cria�ao de objetos)')
System.Console.WriteLine('---------------------------------------------------------------------------')
System.Console.WriteLine('done * using XXX from XXX')
System.Console.WriteLine('done * criar objeto (ConstructorBinding)')
System.Console.WriteLine('done * membros de instancia (f.Show())')
System.Console.WriteLine('done * argumentos nomeados na cria�ao de objetos')
System.Console.WriteLine('done * membros est�ticos Application.Run()')
System.Console.WriteLine('done * resolu�ao de m�todos por argumentos de tipo compat�vel')
System.Console.WriteLine('done * simplificar c�digo:')
System.Console.WriteLine('	done * InternalTypeBinding e ExternalTypeBinding implements INameSpace: unificar codigo;')
System.Console.WriteLine('	done * o mesmo para InternalMethodBinding;')
System.Console.WriteLine('done * propriedades simples (f.Controls)')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.1 (grep.boo)')
System.Console.WriteLine('----------------------')
System.Console.WriteLine('')
System.Console.WriteLine('done * defini�ao de m�todos do m�dulo')
System.Console.WriteLine('done * chamada de m�todos do m�dulo')
System.Console.WriteLine('done * checagem de parametros estrita nas invoca�oes de m�todo')
System.Console.WriteLine('done * array unpacking')
System.Console.WriteLine('done * for item in array')
System.Console.WriteLine('done * for index, item in enumerate(array)')
System.Console.WriteLine('done * melhor mensagem de erro para array unpacking (checar length do array antes de acess�-lo ')
System.Console.WriteLine('e emitir exception "Unpack list of wrong size")')
System.Console.WriteLine('done * Quando o argumento do For ou Unpack for do tipo System.Object, nao fazer simplesmente cast')
System.Console.WriteLine('mas invocar RuntimeServices.GetEnumerable(object) que tenta encontrar a melhor versao de ')
System.Console.WriteLine('um enumer�vel para o objeto passado e, no caso de falha, exibe mensagem de erro mais adequada')
System.Console.WriteLine('done * RuntimeServices.GetEnumerable(object) deve suportar StreamReader')
System.Console.WriteLine('done * resolu�ao de m�todos')
System.Console.WriteLine('done * downcast (peverify grep)')
System.Console.WriteLine('* native regular expression support:')
System.Console.WriteLine('	* re expression /foo/')
System.Console.WriteLine('	done * match operator ~=')
System.Console.WriteLine('done * if stmt modifier')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.3 (replace.boo)')
System.Console.WriteLine('---------------------------')
System.Console.WriteLine('done * using Type (using Boo.IO.TextFile)')
System.Console.WriteLine('done * if string compare')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.4 (rgrep.boo)')
System.Console.WriteLine('-------------------------')
System.Console.WriteLine('done * recursive functions')
System.Console.WriteLine('done * namespace resolution for MemberReferenceExpression')
System.Console.WriteLine('done * using namespace as')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.5')
System.Console.WriteLine('-------------')
System.Console.WriteLine('done * IAstTransformer: uma maneira mais integrada de alterar os n�s da AST em uma visita')
System.Console.WriteLine('DepthFirst, a interface � parecida com IAstSwitcher com a diferen�a de que cada m�todo,')
System.Console.WriteLine('tem um valor de entrada e DE SAIDA que � o novo n� a ser colocado no lugar do n� visitado:')
System.Console.WriteLine('	void OnModule(Module module, ref Module newModule);')
System.Console.WriteLine('	void OnIfStatement(IfStatement statement, ref Statement newStatement)')
System.Console.WriteLine('	void OnBinaryExpression(BinaryExpression expression, ref Expression newExpression)')
System.Console.WriteLine('done * matar Boo.Util.ISwitch/ISwitcher, eles nao agregam valor algum no momento')
System.Console.WriteLine('done * quebrar AbstractCompilerStep em AbstractAstSwitcherStep extends AbstractCompilerStep')
System.Console.WriteLine('done * criar AbstractAstTransformerStep extends AbstractCompilerStep')
System.Console.WriteLine('done * unit tests para o compilador/interpretador')
System.Console.WriteLine('	done * criar uma pasta onde cada arquivo .boo � um testcase com um equivalente .out')
System.Console.WriteLine('	que cont�m a sa�da esperada')
System.Console.WriteLine('	done * o teste executa todos os passos da compila�ao normal e verifica o arquivo final com peverify')
System.Console.WriteLine('done * mover todos as constantes de tipo de BindingManager para Types')
System.Console.WriteLine('done * testes para enum (Criar enum em Boo.Tests e escrever alguns test cases)')
System.Console.WriteLine('done * LeaveDeclarationStatement retorna um ExpressionStatement(BinaryExpression()) de assignment e declara a vari�vel')
System.Console.WriteLine('* remover alguns dos EmitCastIfNeeded do EmitAssemblyStep e move-los para o SemanticStep que dever� criar CastExpression sempre que necess�rio')
System.Console.WriteLine('* AstAttribute vira IAstAttribute que implementa ICompilerStep')
System.Console.WriteLine('* Criar AbstractAstAttribute extends AbstractCompilerStep')
System.Console.WriteLine('* melhor tratamento de TypeReferences no parser, o tipo TypeReference desaparece')
System.Console.WriteLine('e passa a ser utilizado ReferenceExpression em seu lugar (para utilizar a resolu�ao padrao de membros, etc)')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.6 (revisao)')
System.Console.WriteLine('-----------------------')
System.Console.WriteLine('done * boxing (System.Console.WriteLine e StringFormatting)')
System.Console.WriteLine('* ? for deve criar um try { } finally { RuntimeServices.DisposeEnumerator(iterator); }')
System.Console.WriteLine('* transforma�ao de acesso de propriedade em invoca�ao de m�todo passa para SemanticStep')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.8')
System.Console.WriteLine('-------------')
System.Console.WriteLine('* raise')
System.Console.WriteLine('* statement modifiers:')
System.Console.WriteLine('	* unless')
System.Console.WriteLine('	* while')
System.Console.WriteLine('	* until')
System.Console.WriteLine('* try/catch/ensure')
System.Console.WriteLine('	')
System.Console.WriteLine('Milestone 4 (delegate support)')
System.Console.WriteLine('------------------------------')
System.Console.WriteLine('')
System.Console.WriteLine('done * automatic delegation instance creation')
System.Console.WriteLine('* automatic delegation interface adaptation')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 4.3 (otimiza�oes)')
System.Console.WriteLine('---------------------------')
System.Console.WriteLine('* compilador deve entender o atributo [EnumeratorItemType(typeof(string))] para TextFile e StreamReaderEnumerator')
System.Console.WriteLine('e declarar os tipos de acordo')
System.Console.WriteLine('* criar ModuleBinding e unificar com ModuleNamespace;')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 5')
System.Console.WriteLine('-----------')
System.Console.WriteLine('')
System.Console.WriteLine('* classes')
System.Console.WriteLine('* declara??o de campos')
System.Console.WriteLine('* declara??o de propriedades')
System.Console.WriteLine('* defini??o de m?todos')
System.Console.WriteLine('* expressoes simples com inteiros')
System.Console.WriteLine('* concatena�ao de strings')
System.Console.WriteLine('* concatena�ao de strings com inteiros')
System.Console.WriteLine('* classes devem ser serializ?veis')
System.Console.WriteLine('* cria??o de objetos (classes internas)')
System.Console.WriteLine('* chamada de m?todos est?ticos (classes internas)')
System.Console.WriteLine('* chamada de m?todos instance')
System.Console.WriteLine('* null expression')
System.Console.WriteLine('* assert statement')
System.Console.WriteLine('* tuples (arrays) - operador v?rgula => a = 3, 5')
System.Console.WriteLine('* tuple unpacking - a, b  = 3, 5')
System.Console.WriteLine('* tuple indexing (a[0] = 1)')
System.Console.WriteLine('done * for item in tuple')
System.Console.WriteLine('* property access')
System.Console.WriteLine('* property assignment')
System.Console.WriteLine('* list creation [1, 2, 3]')
System.Console.WriteLine('* list indexing')
System.Console.WriteLine('done * bool (true, false)')
System.Console.WriteLine('* operadores de convers?o (operator bool, operator string, etc)')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 6')
System.Console.WriteLine('-----------')
System.Console.WriteLine('')
System.Console.WriteLine('* enum')
System.Console.WriteLine('* interface')
System.Console.WriteLine('* property')
System.Console.WriteLine('')
System.Console.WriteLine('Otimiza??es')
System.Console.WriteLine('-----------')
System.Console.WriteLine('* tail call prefix para fun�oes recursivas com a ScanDirectories do rgrep.boo')
System.Console.WriteLine('')
System.Console.WriteLine('* os m�todos com yield e m�todos que retornam iterators como enumerate devem')
System.Console.WriteLine('marcar o tipo retornado por IEnumerator.Current de forma que o compilador')
System.Console.WriteLine('possa otimizar a utiliza�ao de tais itens (no caso do enumerate, o compilador')
System.Console.WriteLine('saberia que sempre estaria lidando com um array e poderia gerar um unpacking')
System.Console.WriteLine('otimizado, etc);')
System.Console.WriteLine('* const expression unfolding')
System.Console.WriteLine('* proper tail recursion (fatorial)')
System.Console.WriteLine('* for item in array/tuple => traduzir indexa�aoo direta do array com checagem de')
System.Console.WriteLine('bounds, o JIT � capaz de detectar esses patterns e otimizar o c?digo de acordo')
System.Console.WriteLine('* a lista de tarefas migrou para http://bamboo.is-a-geek.org:8080/boo/wiki/TodoList')
System.Console.WriteLine('')
System.Console.WriteLine('Gera�ao de C�digo')
System.Console.WriteLine('=================')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 1 (hello.boo)')
System.Console.WriteLine('-----------------------')
System.Console.WriteLine('')
System.Console.WriteLine('done * bultins')
System.Console.WriteLine('done * local variables')
System.Console.WriteLine('done * expression interpolation (string formatting)')
System.Console.WriteLine(' ')
System.Console.WriteLine('Milestone 2 (debug)')
System.Console.WriteLine('-------------------')
System.Console.WriteLine('')
System.Console.WriteLine('done * line numbers na vers?o de depura??o')
System.Console.WriteLine('done * depurar com o mscordbg')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3 (helloforms.boo - using, m�todos est�ticos, cria�ao de objetos)')
System.Console.WriteLine('---------------------------------------------------------------------------')
System.Console.WriteLine('done * using XXX from XXX')
System.Console.WriteLine('done * criar objeto (ConstructorBinding)')
System.Console.WriteLine('done * membros de instancia (f.Show())')
System.Console.WriteLine('done * argumentos nomeados na cria�ao de objetos')
System.Console.WriteLine('done * membros est�ticos Application.Run()')
System.Console.WriteLine('done * resolu�ao de m�todos por argumentos de tipo compat�vel')
System.Console.WriteLine('done * simplificar c�digo:')
System.Console.WriteLine('	done * InternalTypeBinding e ExternalTypeBinding implements INameSpace: unificar codigo;')
System.Console.WriteLine('	done * o mesmo para InternalMethodBinding;')
System.Console.WriteLine('done * propriedades simples (f.Controls)')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.1 (grep.boo)')
System.Console.WriteLine('----------------------')
System.Console.WriteLine('')
System.Console.WriteLine('done * defini�ao de m�todos do m�dulo')
System.Console.WriteLine('done * chamada de m�todos do m�dulo')
System.Console.WriteLine('done * checagem de parametros estrita nas invoca�oes de m�todo')
System.Console.WriteLine('done * array unpacking')
System.Console.WriteLine('done * for item in array')
System.Console.WriteLine('done * for index, item in enumerate(array)')
System.Console.WriteLine('done * melhor mensagem de erro para array unpacking (checar length do array antes de acess�-lo ')
System.Console.WriteLine('e emitir exception "Unpack list of wrong size")')
System.Console.WriteLine('done * Quando o argumento do For ou Unpack for do tipo System.Object, nao fazer simplesmente cast')
System.Console.WriteLine('mas invocar RuntimeServices.GetEnumerable(object) que tenta encontrar a melhor versao de ')
System.Console.WriteLine('um enumer�vel para o objeto passado e, no caso de falha, exibe mensagem de erro mais adequada')
System.Console.WriteLine('done * RuntimeServices.GetEnumerable(object) deve suportar StreamReader')
System.Console.WriteLine('done * resolu�ao de m�todos')
System.Console.WriteLine('done * downcast (peverify grep)')
System.Console.WriteLine('* native regular expression support:')
System.Console.WriteLine('	* re expression /foo/')
System.Console.WriteLine('	done * match operator ~=')
System.Console.WriteLine('done * if stmt modifier')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.3 (replace.boo)')
System.Console.WriteLine('---------------------------')
System.Console.WriteLine('done * using Type (using Boo.IO.TextFile)')
System.Console.WriteLine('done * if string compare')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.4 (rgrep.boo)')
System.Console.WriteLine('-------------------------')
System.Console.WriteLine('done * recursive functions')
System.Console.WriteLine('done * namespace resolution for MemberReferenceExpression')
System.Console.WriteLine('done * using namespace as')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.5')
System.Console.WriteLine('-------------')
System.Console.WriteLine('done * IAstTransformer: uma maneira mais integrada de alterar os n�s da AST em uma visita')
System.Console.WriteLine('DepthFirst, a interface � parecida com IAstSwitcher com a diferen�a de que cada m�todo,')
System.Console.WriteLine('tem um valor de entrada e DE SAIDA que � o novo n� a ser colocado no lugar do n� visitado:')
System.Console.WriteLine('	void OnModule(Module module, ref Module newModule);')
System.Console.WriteLine('	void OnIfStatement(IfStatement statement, ref Statement newStatement)')
System.Console.WriteLine('	void OnBinaryExpression(BinaryExpression expression, ref Expression newExpression)')
System.Console.WriteLine('done * matar Boo.Util.ISwitch/ISwitcher, eles nao agregam valor algum no momento')
System.Console.WriteLine('done * quebrar AbstractCompilerStep em AbstractAstSwitcherStep extends AbstractCompilerStep')
System.Console.WriteLine('done * criar AbstractAstTransformerStep extends AbstractCompilerStep')
System.Console.WriteLine('done * unit tests para o compilador/interpretador')
System.Console.WriteLine('	done * criar uma pasta onde cada arquivo .boo � um testcase com um equivalente .out')
System.Console.WriteLine('	que cont�m a sa�da esperada')
System.Console.WriteLine('	done * o teste executa todos os passos da compila�ao normal e verifica o arquivo final com peverify')
System.Console.WriteLine('done * mover todos as constantes de tipo de BindingManager para Types')
System.Console.WriteLine('done * testes para enum (Criar enum em Boo.Tests e escrever alguns test cases)')
System.Console.WriteLine('done * LeaveDeclarationStatement retorna um ExpressionStatement(BinaryExpression()) de assignment e declara a vari�vel')
System.Console.WriteLine('* remover alguns dos EmitCastIfNeeded do EmitAssemblyStep e move-los para o SemanticStep que dever� criar CastExpression sempre que necess�rio')
System.Console.WriteLine('* AstAttribute vira IAstAttribute que implementa ICompilerStep')
System.Console.WriteLine('* Criar AbstractAstAttribute extends AbstractCompilerStep')
System.Console.WriteLine('* melhor tratamento de TypeReferences no parser, o tipo TypeReference desaparece')
System.Console.WriteLine('e passa a ser utilizado ReferenceExpression em seu lugar (para utilizar a resolu�ao padrao de membros, etc)')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.6 (revisao)')
System.Console.WriteLine('-----------------------')
System.Console.WriteLine('done * boxing (System.Console.WriteLine e StringFormatting)')
System.Console.WriteLine('* ? for deve criar um try { } finally { RuntimeServices.DisposeEnumerator(iterator); }')
System.Console.WriteLine('* transforma�ao de acesso de propriedade em invoca�ao de m�todo passa para SemanticStep')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.8')
System.Console.WriteLine('-------------')
System.Console.WriteLine('* raise')
System.Console.WriteLine('* statement modifiers:')
System.Console.WriteLine('	* unless')
System.Console.WriteLine('	* while')
System.Console.WriteLine('	* until')
System.Console.WriteLine('* try/catch/ensure')
System.Console.WriteLine('	')
System.Console.WriteLine('Milestone 4 (delegate support)')
System.Console.WriteLine('------------------------------')
System.Console.WriteLine('')
System.Console.WriteLine('done * automatic delegation instance creation')
System.Console.WriteLine('* automatic delegation interface adaptation')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 4.3 (otimiza�oes)')
System.Console.WriteLine('---------------------------')
System.Console.WriteLine('* compilador deve entender o atributo [EnumeratorItemType(typeof(string))] para TextFile e StreamReaderEnumerator')
System.Console.WriteLine('e declarar os tipos de acordo')
System.Console.WriteLine('* criar ModuleBinding e unificar com ModuleNamespace;')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 5')
System.Console.WriteLine('-----------')
System.Console.WriteLine('')
System.Console.WriteLine('* classes')
System.Console.WriteLine('* declara??o de campos')
System.Console.WriteLine('* declara??o de propriedades')
System.Console.WriteLine('* defini??o de m?todos')
System.Console.WriteLine('* expressoes simples com inteiros')
System.Console.WriteLine('* concatena�ao de strings')
System.Console.WriteLine('* concatena�ao de strings com inteiros')
System.Console.WriteLine('* classes devem ser serializ?veis')
System.Console.WriteLine('* cria??o de objetos (classes internas)')
System.Console.WriteLine('* chamada de m?todos est?ticos (classes internas)')
System.Console.WriteLine('* chamada de m?todos instance')
System.Console.WriteLine('* null expression')
System.Console.WriteLine('* assert statement')
System.Console.WriteLine('* tuples (arrays) - operador v?rgula => a = 3, 5')
System.Console.WriteLine('* tuple unpacking - a, b  = 3, 5')
System.Console.WriteLine('* tuple indexing (a[0] = 1)')
System.Console.WriteLine('done * for item in tuple')
System.Console.WriteLine('* property access')
System.Console.WriteLine('* property assignment')
System.Console.WriteLine('* list creation [1, 2, 3]')
System.Console.WriteLine('* list indexing')
System.Console.WriteLine('done * bool (true, false)')
System.Console.WriteLine('* operadores de convers?o (operator bool, operator string, etc)')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 6')
System.Console.WriteLine('-----------')
System.Console.WriteLine('')
System.Console.WriteLine('* enum')
System.Console.WriteLine('* interface')
System.Console.WriteLine('* property')
System.Console.WriteLine('')
System.Console.WriteLine('Otimiza??es')
System.Console.WriteLine('-----------')
System.Console.WriteLine('* tail call prefix para fun�oes recursivas com a ScanDirectories do rgrep.boo')
System.Console.WriteLine('')
System.Console.WriteLine('* os m�todos com yield e m�todos que retornam iterators como enumerate devem')
System.Console.WriteLine('marcar o tipo retornado por IEnumerator.Current de forma que o compilador')
System.Console.WriteLine('possa otimizar a utiliza�ao de tais itens (no caso do enumerate, o compilador')
System.Console.WriteLine('saberia que sempre estaria lidando com um array e poderia gerar um unpacking')
System.Console.WriteLine('otimizado, etc);')
System.Console.WriteLine('* const expression unfolding')
System.Console.WriteLine('* proper tail recursion (fatorial)')
System.Console.WriteLine('* for item in array/tuple => traduzir indexa�aoo direta do array com checagem de')
System.Console.WriteLine('bounds, o JIT � capaz de detectar esses patterns e otimizar o c?digo de acordo')
System.Console.WriteLine('* a lista de tarefas migrou para http://bamboo.is-a-geek.org:8080/boo/wiki/TodoList')
System.Console.WriteLine('')
System.Console.WriteLine('Gera�ao de C�digo')
System.Console.WriteLine('=================')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 1 (hello.boo)')
System.Console.WriteLine('-----------------------')
System.Console.WriteLine('')
System.Console.WriteLine('done * bultins')
System.Console.WriteLine('done * local variables')
System.Console.WriteLine('done * expression interpolation (string formatting)')
System.Console.WriteLine(' ')
System.Console.WriteLine('Milestone 2 (debug)')
System.Console.WriteLine('-------------------')
System.Console.WriteLine('')
System.Console.WriteLine('done * line numbers na vers?o de depura??o')
System.Console.WriteLine('done * depurar com o mscordbg')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3 (helloforms.boo - using, m�todos est�ticos, cria�ao de objetos)')
System.Console.WriteLine('---------------------------------------------------------------------------')
System.Console.WriteLine('done * using XXX from XXX')
System.Console.WriteLine('done * criar objeto (ConstructorBinding)')
System.Console.WriteLine('done * membros de instancia (f.Show())')
System.Console.WriteLine('done * argumentos nomeados na cria�ao de objetos')
System.Console.WriteLine('done * membros est�ticos Application.Run()')
System.Console.WriteLine('done * resolu�ao de m�todos por argumentos de tipo compat�vel')
System.Console.WriteLine('done * simplificar c�digo:')
System.Console.WriteLine('	done * InternalTypeBinding e ExternalTypeBinding implements INameSpace: unificar codigo;')
System.Console.WriteLine('	done * o mesmo para InternalMethodBinding;')
System.Console.WriteLine('done * propriedades simples (f.Controls)')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.1 (grep.boo)')
System.Console.WriteLine('----------------------')
System.Console.WriteLine('')
System.Console.WriteLine('done * defini�ao de m�todos do m�dulo')
System.Console.WriteLine('done * chamada de m�todos do m�dulo')
System.Console.WriteLine('done * checagem de parametros estrita nas invoca�oes de m�todo')
System.Console.WriteLine('done * array unpacking')
System.Console.WriteLine('done * for item in array')
System.Console.WriteLine('done * for index, item in enumerate(array)')
System.Console.WriteLine('done * melhor mensagem de erro para array unpacking (checar length do array antes de acess�-lo ')
System.Console.WriteLine('e emitir exception "Unpack list of wrong size")')
System.Console.WriteLine('done * Quando o argumento do For ou Unpack for do tipo System.Object, nao fazer simplesmente cast')
System.Console.WriteLine('mas invocar RuntimeServices.GetEnumerable(object) que tenta encontrar a melhor versao de ')
System.Console.WriteLine('um enumer�vel para o objeto passado e, no caso de falha, exibe mensagem de erro mais adequada')
System.Console.WriteLine('done * RuntimeServices.GetEnumerable(object) deve suportar StreamReader')
System.Console.WriteLine('done * resolu�ao de m�todos')
System.Console.WriteLine('done * downcast (peverify grep)')
System.Console.WriteLine('* native regular expression support:')
System.Console.WriteLine('	* re expression /foo/')
System.Console.WriteLine('	done * match operator ~=')
System.Console.WriteLine('done * if stmt modifier')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.3 (replace.boo)')
System.Console.WriteLine('---------------------------')
System.Console.WriteLine('done * using Type (using Boo.IO.TextFile)')
System.Console.WriteLine('done * if string compare')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.4 (rgrep.boo)')
System.Console.WriteLine('-------------------------')
System.Console.WriteLine('done * recursive functions')
System.Console.WriteLine('done * namespace resolution for MemberReferenceExpression')
System.Console.WriteLine('done * using namespace as')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.5')
System.Console.WriteLine('-------------')
System.Console.WriteLine('done * IAstTransformer: uma maneira mais integrada de alterar os n�s da AST em uma visita')
System.Console.WriteLine('DepthFirst, a interface � parecida com IAstSwitcher com a diferen�a de que cada m�todo,')
System.Console.WriteLine('tem um valor de entrada e DE SAIDA que � o novo n� a ser colocado no lugar do n� visitado:')
System.Console.WriteLine('	void OnModule(Module module, ref Module newModule);')
System.Console.WriteLine('	void OnIfStatement(IfStatement statement, ref Statement newStatement)')
System.Console.WriteLine('	void OnBinaryExpression(BinaryExpression expression, ref Expression newExpression)')
System.Console.WriteLine('done * matar Boo.Util.ISwitch/ISwitcher, eles nao agregam valor algum no momento')
System.Console.WriteLine('done * quebrar AbstractCompilerStep em AbstractAstSwitcherStep extends AbstractCompilerStep')
System.Console.WriteLine('done * criar AbstractAstTransformerStep extends AbstractCompilerStep')
System.Console.WriteLine('done * unit tests para o compilador/interpretador')
System.Console.WriteLine('	done * criar uma pasta onde cada arquivo .boo � um testcase com um equivalente .out')
System.Console.WriteLine('	que cont�m a sa�da esperada')
System.Console.WriteLine('	done * o teste executa todos os passos da compila�ao normal e verifica o arquivo final com peverify')
System.Console.WriteLine('done * mover todos as constantes de tipo de BindingManager para Types')
System.Console.WriteLine('done * testes para enum (Criar enum em Boo.Tests e escrever alguns test cases)')
System.Console.WriteLine('done * LeaveDeclarationStatement retorna um ExpressionStatement(BinaryExpression()) de assignment e declara a vari�vel')
System.Console.WriteLine('* remover alguns dos EmitCastIfNeeded do EmitAssemblyStep e move-los para o SemanticStep que dever� criar CastExpression sempre que necess�rio')
System.Console.WriteLine('* AstAttribute vira IAstAttribute que implementa ICompilerStep')
System.Console.WriteLine('* Criar AbstractAstAttribute extends AbstractCompilerStep')
System.Console.WriteLine('* melhor tratamento de TypeReferences no parser, o tipo TypeReference desaparece')
System.Console.WriteLine('e passa a ser utilizado ReferenceExpression em seu lugar (para utilizar a resolu�ao padrao de membros, etc)')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.6 (revisao)')
System.Console.WriteLine('-----------------------')
System.Console.WriteLine('done * boxing (System.Console.WriteLine e StringFormatting)')
System.Console.WriteLine('* ? for deve criar um try { } finally { RuntimeServices.DisposeEnumerator(iterator); }')
System.Console.WriteLine('* transforma�ao de acesso de propriedade em invoca�ao de m�todo passa para SemanticStep')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.8')
System.Console.WriteLine('-------------')
System.Console.WriteLine('* raise')
System.Console.WriteLine('* statement modifiers:')
System.Console.WriteLine('	* unless')
System.Console.WriteLine('	* while')
System.Console.WriteLine('	* until')
System.Console.WriteLine('* try/catch/ensure')
System.Console.WriteLine('	')
System.Console.WriteLine('Milestone 4 (delegate support)')
System.Console.WriteLine('------------------------------')
System.Console.WriteLine('')
System.Console.WriteLine('done * automatic delegation instance creation')
System.Console.WriteLine('* automatic delegation interface adaptation')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 4.3 (otimiza�oes)')
System.Console.WriteLine('---------------------------')
System.Console.WriteLine('* compilador deve entender o atributo [EnumeratorItemType(typeof(string))] para TextFile e StreamReaderEnumerator')
System.Console.WriteLine('e declarar os tipos de acordo')
System.Console.WriteLine('* criar ModuleBinding e unificar com ModuleNamespace;')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 5')
System.Console.WriteLine('-----------')
System.Console.WriteLine('')
System.Console.WriteLine('* classes')
System.Console.WriteLine('* declara??o de campos')
System.Console.WriteLine('* declara??o de propriedades')
System.Console.WriteLine('* defini??o de m?todos')
System.Console.WriteLine('* expressoes simples com inteiros')
System.Console.WriteLine('* concatena�ao de strings')
System.Console.WriteLine('* concatena�ao de strings com inteiros')
System.Console.WriteLine('* classes devem ser serializ?veis')
System.Console.WriteLine('* cria??o de objetos (classes internas)')
System.Console.WriteLine('* chamada de m?todos est?ticos (classes internas)')
System.Console.WriteLine('* chamada de m?todos instance')
System.Console.WriteLine('* null expression')
System.Console.WriteLine('* assert statement')
System.Console.WriteLine('* tuples (arrays) - operador v?rgula => a = 3, 5')
System.Console.WriteLine('* tuple unpacking - a, b  = 3, 5')
System.Console.WriteLine('* tuple indexing (a[0] = 1)')
System.Console.WriteLine('done * for item in tuple')
System.Console.WriteLine('* property access')
System.Console.WriteLine('* property assignment')
System.Console.WriteLine('* list creation [1, 2, 3]')
System.Console.WriteLine('* list indexing')
System.Console.WriteLine('done * bool (true, false)')
System.Console.WriteLine('* operadores de convers?o (operator bool, operator string, etc)')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 6')
System.Console.WriteLine('-----------')
System.Console.WriteLine('')
System.Console.WriteLine('* enum')
System.Console.WriteLine('* interface')
System.Console.WriteLine('* property')
System.Console.WriteLine('')
System.Console.WriteLine('Otimiza??es')
System.Console.WriteLine('-----------')
System.Console.WriteLine('* tail call prefix para fun�oes recursivas com a ScanDirectories do rgrep.boo')
System.Console.WriteLine('')
System.Console.WriteLine('* os m�todos com yield e m�todos que retornam iterators como enumerate devem')
System.Console.WriteLine('marcar o tipo retornado por IEnumerator.Current de forma que o compilador')
System.Console.WriteLine('possa otimizar a utiliza�ao de tais itens (no caso do enumerate, o compilador')
System.Console.WriteLine('saberia que sempre estaria lidando com um array e poderia gerar um unpacking')
System.Console.WriteLine('otimizado, etc);')
System.Console.WriteLine('* const expression unfolding')
System.Console.WriteLine('* proper tail recursion (fatorial)')
System.Console.WriteLine('* for item in array/tuple => traduzir indexa�aoo direta do array com checagem de')
System.Console.WriteLine('bounds, o JIT � capaz de detectar esses patterns e otimizar o c?digo de acordo')
System.Console.WriteLine('* a lista de tarefas migrou para http://bamboo.is-a-geek.org:8080/boo/wiki/TodoList')
System.Console.WriteLine('')
System.Console.WriteLine('Gera�ao de C�digo')
System.Console.WriteLine('=================')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 1 (hello.boo)')
System.Console.WriteLine('-----------------------')
System.Console.WriteLine('')
System.Console.WriteLine('done * bultins')
System.Console.WriteLine('done * local variables')
System.Console.WriteLine('done * expression interpolation (string formatting)')
System.Console.WriteLine(' ')
System.Console.WriteLine('Milestone 2 (debug)')
System.Console.WriteLine('-------------------')
System.Console.WriteLine('')
System.Console.WriteLine('done * line numbers na vers?o de depura??o')
System.Console.WriteLine('done * depurar com o mscordbg')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3 (helloforms.boo - using, m�todos est�ticos, cria�ao de objetos)')
System.Console.WriteLine('---------------------------------------------------------------------------')
System.Console.WriteLine('done * using XXX from XXX')
System.Console.WriteLine('done * criar objeto (ConstructorBinding)')
System.Console.WriteLine('done * membros de instancia (f.Show())')
System.Console.WriteLine('done * argumentos nomeados na cria�ao de objetos')
System.Console.WriteLine('done * membros est�ticos Application.Run()')
System.Console.WriteLine('done * resolu�ao de m�todos por argumentos de tipo compat�vel')
System.Console.WriteLine('done * simplificar c�digo:')
System.Console.WriteLine('	done * InternalTypeBinding e ExternalTypeBinding implements INameSpace: unificar codigo;')
System.Console.WriteLine('	done * o mesmo para InternalMethodBinding;')
System.Console.WriteLine('done * propriedades simples (f.Controls)')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.1 (grep.boo)')
System.Console.WriteLine('----------------------')
System.Console.WriteLine('')
System.Console.WriteLine('done * defini�ao de m�todos do m�dulo')
System.Console.WriteLine('done * chamada de m�todos do m�dulo')
System.Console.WriteLine('done * checagem de parametros estrita nas invoca�oes de m�todo')
System.Console.WriteLine('done * array unpacking')
System.Console.WriteLine('done * for item in array')
System.Console.WriteLine('done * for index, item in enumerate(array)')
System.Console.WriteLine('done * melhor mensagem de erro para array unpacking (checar length do array antes de acess�-lo ')
System.Console.WriteLine('e emitir exception "Unpack list of wrong size")')
System.Console.WriteLine('done * Quando o argumento do For ou Unpack for do tipo System.Object, nao fazer simplesmente cast')
System.Console.WriteLine('mas invocar RuntimeServices.GetEnumerable(object) que tenta encontrar a melhor versao de ')
System.Console.WriteLine('um enumer�vel para o objeto passado e, no caso de falha, exibe mensagem de erro mais adequada')
System.Console.WriteLine('done * RuntimeServices.GetEnumerable(object) deve suportar StreamReader')
System.Console.WriteLine('done * resolu�ao de m�todos')
System.Console.WriteLine('done * downcast (peverify grep)')
System.Console.WriteLine('* native regular expression support:')
System.Console.WriteLine('	* re expression /foo/')
System.Console.WriteLine('	done * match operator ~=')
System.Console.WriteLine('done * if stmt modifier')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.3 (replace.boo)')
System.Console.WriteLine('---------------------------')
System.Console.WriteLine('done * using Type (using Boo.IO.TextFile)')
System.Console.WriteLine('done * if string compare')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.4 (rgrep.boo)')
System.Console.WriteLine('-------------------------')
System.Console.WriteLine('done * recursive functions')
System.Console.WriteLine('done * namespace resolution for MemberReferenceExpression')
System.Console.WriteLine('done * using namespace as')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.5')
System.Console.WriteLine('-------------')
System.Console.WriteLine('done * IAstTransformer: uma maneira mais integrada de alterar os n�s da AST em uma visita')
System.Console.WriteLine('DepthFirst, a interface � parecida com IAstSwitcher com a diferen�a de que cada m�todo,')
System.Console.WriteLine('tem um valor de entrada e DE SAIDA que � o novo n� a ser colocado no lugar do n� visitado:')
System.Console.WriteLine('	void OnModule(Module module, ref Module newModule);')
System.Console.WriteLine('	void OnIfStatement(IfStatement statement, ref Statement newStatement)')
System.Console.WriteLine('	void OnBinaryExpression(BinaryExpression expression, ref Expression newExpression)')
System.Console.WriteLine('done * matar Boo.Util.ISwitch/ISwitcher, eles nao agregam valor algum no momento')
System.Console.WriteLine('done * quebrar AbstractCompilerStep em AbstractAstSwitcherStep extends AbstractCompilerStep')
System.Console.WriteLine('done * criar AbstractAstTransformerStep extends AbstractCompilerStep')
System.Console.WriteLine('done * unit tests para o compilador/interpretador')
System.Console.WriteLine('	done * criar uma pasta onde cada arquivo .boo � um testcase com um equivalente .out')
System.Console.WriteLine('	que cont�m a sa�da esperada')
System.Console.WriteLine('	done * o teste executa todos os passos da compila�ao normal e verifica o arquivo final com peverify')
System.Console.WriteLine('done * mover todos as constantes de tipo de BindingManager para Types')
System.Console.WriteLine('done * testes para enum (Criar enum em Boo.Tests e escrever alguns test cases)')
System.Console.WriteLine('done * LeaveDeclarationStatement retorna um ExpressionStatement(BinaryExpression()) de assignment e declara a vari�vel')
System.Console.WriteLine('* remover alguns dos EmitCastIfNeeded do EmitAssemblyStep e move-los para o SemanticStep que dever� criar CastExpression sempre que necess�rio')
System.Console.WriteLine('* AstAttribute vira IAstAttribute que implementa ICompilerStep')
System.Console.WriteLine('* Criar AbstractAstAttribute extends AbstractCompilerStep')
System.Console.WriteLine('* melhor tratamento de TypeReferences no parser, o tipo TypeReference desaparece')
System.Console.WriteLine('e passa a ser utilizado ReferenceExpression em seu lugar (para utilizar a resolu�ao padrao de membros, etc)')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.6 (revisao)')
System.Console.WriteLine('-----------------------')
System.Console.WriteLine('done * boxing (System.Console.WriteLine e StringFormatting)')
System.Console.WriteLine('* ? for deve criar um try { } finally { RuntimeServices.DisposeEnumerator(iterator); }')
System.Console.WriteLine('* transforma�ao de acesso de propriedade em invoca�ao de m�todo passa para SemanticStep')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.8')
System.Console.WriteLine('-------------')
System.Console.WriteLine('* raise')
System.Console.WriteLine('* statement modifiers:')
System.Console.WriteLine('	* unless')
System.Console.WriteLine('	* while')
System.Console.WriteLine('	* until')
System.Console.WriteLine('* try/catch/ensure')
System.Console.WriteLine('	')
System.Console.WriteLine('Milestone 4 (delegate support)')
System.Console.WriteLine('------------------------------')
System.Console.WriteLine('')
System.Console.WriteLine('done * automatic delegation instance creation')
System.Console.WriteLine('* automatic delegation interface adaptation')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 4.3 (otimiza�oes)')
System.Console.WriteLine('---------------------------')
System.Console.WriteLine('* compilador deve entender o atributo [EnumeratorItemType(typeof(string))] para TextFile e StreamReaderEnumerator')
System.Console.WriteLine('e declarar os tipos de acordo')
System.Console.WriteLine('* criar ModuleBinding e unificar com ModuleNamespace;')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 5')
System.Console.WriteLine('-----------')
System.Console.WriteLine('')
System.Console.WriteLine('* classes')
System.Console.WriteLine('* declara??o de campos')
System.Console.WriteLine('* declara??o de propriedades')
System.Console.WriteLine('* defini??o de m?todos')
System.Console.WriteLine('* expressoes simples com inteiros')
System.Console.WriteLine('* concatena�ao de strings')
System.Console.WriteLine('* concatena�ao de strings com inteiros')
System.Console.WriteLine('* classes devem ser serializ?veis')
System.Console.WriteLine('* cria??o de objetos (classes internas)')
System.Console.WriteLine('* chamada de m?todos est?ticos (classes internas)')
System.Console.WriteLine('* chamada de m?todos instance')
System.Console.WriteLine('* null expression')
System.Console.WriteLine('* assert statement')
System.Console.WriteLine('* tuples (arrays) - operador v?rgula => a = 3, 5')
System.Console.WriteLine('* tuple unpacking - a, b  = 3, 5')
System.Console.WriteLine('* tuple indexing (a[0] = 1)')
System.Console.WriteLine('done * for item in tuple')
System.Console.WriteLine('* property access')
System.Console.WriteLine('* property assignment')
System.Console.WriteLine('* list creation [1, 2, 3]')
System.Console.WriteLine('* list indexing')
System.Console.WriteLine('done * bool (true, false)')
System.Console.WriteLine('* operadores de convers?o (operator bool, operator string, etc)')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 6')
System.Console.WriteLine('-----------')
System.Console.WriteLine('')
System.Console.WriteLine('* enum')
System.Console.WriteLine('* interface')
System.Console.WriteLine('* property')
System.Console.WriteLine('')
System.Console.WriteLine('Otimiza??es')
System.Console.WriteLine('-----------')
System.Console.WriteLine('* tail call prefix para fun�oes recursivas com a ScanDirectories do rgrep.boo')
System.Console.WriteLine('')
System.Console.WriteLine('* os m�todos com yield e m�todos que retornam iterators como enumerate devem')
System.Console.WriteLine('marcar o tipo retornado por IEnumerator.Current de forma que o compilador')
System.Console.WriteLine('possa otimizar a utiliza�ao de tais itens (no caso do enumerate, o compilador')
System.Console.WriteLine('saberia que sempre estaria lidando com um array e poderia gerar um unpacking')
System.Console.WriteLine('otimizado, etc);')
System.Console.WriteLine('* const expression unfolding')
System.Console.WriteLine('* proper tail recursion (fatorial)')
System.Console.WriteLine('* for item in array/tuple => traduzir indexa�aoo direta do array com checagem de')
System.Console.WriteLine('bounds, o JIT � capaz de detectar esses patterns e otimizar o c?digo de acordo')
System.Console.WriteLine('* a lista de tarefas migrou para http://bamboo.is-a-geek.org:8080/boo/wiki/TodoList')
System.Console.WriteLine('')
System.Console.WriteLine('Gera�ao de C�digo')
System.Console.WriteLine('=================')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 1 (hello.boo)')
System.Console.WriteLine('-----------------------')
System.Console.WriteLine('')
System.Console.WriteLine('done * bultins')
System.Console.WriteLine('done * local variables')
System.Console.WriteLine('done * expression interpolation (string formatting)')
System.Console.WriteLine(' ')
System.Console.WriteLine('Milestone 2 (debug)')
System.Console.WriteLine('-------------------')
System.Console.WriteLine('')
System.Console.WriteLine('done * line numbers na vers?o de depura??o')
System.Console.WriteLine('done * depurar com o mscordbg')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3 (helloforms.boo - using, m�todos est�ticos, cria�ao de objetos)')
System.Console.WriteLine('---------------------------------------------------------------------------')
System.Console.WriteLine('done * using XXX from XXX')
System.Console.WriteLine('done * criar objeto (ConstructorBinding)')
System.Console.WriteLine('done * membros de instancia (f.Show())')
System.Console.WriteLine('done * argumentos nomeados na cria�ao de objetos')
System.Console.WriteLine('done * membros est�ticos Application.Run()')
System.Console.WriteLine('done * resolu�ao de m�todos por argumentos de tipo compat�vel')
System.Console.WriteLine('done * simplificar c�digo:')
System.Console.WriteLine('	done * InternalTypeBinding e ExternalTypeBinding implements INameSpace: unificar codigo;')
System.Console.WriteLine('	done * o mesmo para InternalMethodBinding;')
System.Console.WriteLine('done * propriedades simples (f.Controls)')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.1 (grep.boo)')
System.Console.WriteLine('----------------------')
System.Console.WriteLine('')
System.Console.WriteLine('done * defini�ao de m�todos do m�dulo')
System.Console.WriteLine('done * chamada de m�todos do m�dulo')
System.Console.WriteLine('done * checagem de parametros estrita nas invoca�oes de m�todo')
System.Console.WriteLine('done * array unpacking')
System.Console.WriteLine('done * for item in array')
System.Console.WriteLine('done * for index, item in enumerate(array)')
System.Console.WriteLine('done * melhor mensagem de erro para array unpacking (checar length do array antes de acess�-lo ')
System.Console.WriteLine('e emitir exception "Unpack list of wrong size")')
System.Console.WriteLine('done * Quando o argumento do For ou Unpack for do tipo System.Object, nao fazer simplesmente cast')
System.Console.WriteLine('mas invocar RuntimeServices.GetEnumerable(object) que tenta encontrar a melhor versao de ')
System.Console.WriteLine('um enumer�vel para o objeto passado e, no caso de falha, exibe mensagem de erro mais adequada')
System.Console.WriteLine('done * RuntimeServices.GetEnumerable(object) deve suportar StreamReader')
System.Console.WriteLine('done * resolu�ao de m�todos')
System.Console.WriteLine('done * downcast (peverify grep)')
System.Console.WriteLine('* native regular expression support:')
System.Console.WriteLine('	* re expression /foo/')
System.Console.WriteLine('	done * match operator ~=')
System.Console.WriteLine('done * if stmt modifier')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.3 (replace.boo)')
System.Console.WriteLine('---------------------------')
System.Console.WriteLine('done * using Type (using Boo.IO.TextFile)')
System.Console.WriteLine('done * if string compare')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.4 (rgrep.boo)')
System.Console.WriteLine('-------------------------')
System.Console.WriteLine('done * recursive functions')
System.Console.WriteLine('done * namespace resolution for MemberReferenceExpression')
System.Console.WriteLine('done * using namespace as')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.5')
System.Console.WriteLine('-------------')
System.Console.WriteLine('done * IAstTransformer: uma maneira mais integrada de alterar os n�s da AST em uma visita')
System.Console.WriteLine('DepthFirst, a interface � parecida com IAstSwitcher com a diferen�a de que cada m�todo,')
System.Console.WriteLine('tem um valor de entrada e DE SAIDA que � o novo n� a ser colocado no lugar do n� visitado:')
System.Console.WriteLine('	void OnModule(Module module, ref Module newModule);')
System.Console.WriteLine('	void OnIfStatement(IfStatement statement, ref Statement newStatement)')
System.Console.WriteLine('	void OnBinaryExpression(BinaryExpression expression, ref Expression newExpression)')
System.Console.WriteLine('done * matar Boo.Util.ISwitch/ISwitcher, eles nao agregam valor algum no momento')
System.Console.WriteLine('done * quebrar AbstractCompilerStep em AbstractAstSwitcherStep extends AbstractCompilerStep')
System.Console.WriteLine('done * criar AbstractAstTransformerStep extends AbstractCompilerStep')
System.Console.WriteLine('done * unit tests para o compilador/interpretador')
System.Console.WriteLine('	done * criar uma pasta onde cada arquivo .boo � um testcase com um equivalente .out')
System.Console.WriteLine('	que cont�m a sa�da esperada')
System.Console.WriteLine('	done * o teste executa todos os passos da compila�ao normal e verifica o arquivo final com peverify')
System.Console.WriteLine('done * mover todos as constantes de tipo de BindingManager para Types')
System.Console.WriteLine('done * testes para enum (Criar enum em Boo.Tests e escrever alguns test cases)')
System.Console.WriteLine('done * LeaveDeclarationStatement retorna um ExpressionStatement(BinaryExpression()) de assignment e declara a vari�vel')
System.Console.WriteLine('* remover alguns dos EmitCastIfNeeded do EmitAssemblyStep e move-los para o SemanticStep que dever� criar CastExpression sempre que necess�rio')
System.Console.WriteLine('* AstAttribute vira IAstAttribute que implementa ICompilerStep')
System.Console.WriteLine('* Criar AbstractAstAttribute extends AbstractCompilerStep')
System.Console.WriteLine('* melhor tratamento de TypeReferences no parser, o tipo TypeReference desaparece')
System.Console.WriteLine('e passa a ser utilizado ReferenceExpression em seu lugar (para utilizar a resolu�ao padrao de membros, etc)')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.6 (revisao)')
System.Console.WriteLine('-----------------------')
System.Console.WriteLine('done * boxing (System.Console.WriteLine e StringFormatting)')
System.Console.WriteLine('* ? for deve criar um try { } finally { RuntimeServices.DisposeEnumerator(iterator); }')
System.Console.WriteLine('* transforma�ao de acesso de propriedade em invoca�ao de m�todo passa para SemanticStep')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.8')
System.Console.WriteLine('-------------')
System.Console.WriteLine('* raise')
System.Console.WriteLine('* statement modifiers:')
System.Console.WriteLine('	* unless')
System.Console.WriteLine('	* while')
System.Console.WriteLine('	* until')
System.Console.WriteLine('* try/catch/ensure')
System.Console.WriteLine('	')
System.Console.WriteLine('Milestone 4 (delegate support)')
System.Console.WriteLine('------------------------------')
System.Console.WriteLine('')
System.Console.WriteLine('done * automatic delegation instance creation')
System.Console.WriteLine('* automatic delegation interface adaptation')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 4.3 (otimiza�oes)')
System.Console.WriteLine('---------------------------')
System.Console.WriteLine('* compilador deve entender o atributo [EnumeratorItemType(typeof(string))] para TextFile e StreamReaderEnumerator')
System.Console.WriteLine('e declarar os tipos de acordo')
System.Console.WriteLine('* criar ModuleBinding e unificar com ModuleNamespace;')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 5')
System.Console.WriteLine('-----------')
System.Console.WriteLine('')
System.Console.WriteLine('* classes')
System.Console.WriteLine('* declara??o de campos')
System.Console.WriteLine('* declara??o de propriedades')
System.Console.WriteLine('* defini??o de m?todos')
System.Console.WriteLine('* expressoes simples com inteiros')
System.Console.WriteLine('* concatena�ao de strings')
System.Console.WriteLine('* concatena�ao de strings com inteiros')
System.Console.WriteLine('* classes devem ser serializ?veis')
System.Console.WriteLine('* cria??o de objetos (classes internas)')
System.Console.WriteLine('* chamada de m?todos est?ticos (classes internas)')
System.Console.WriteLine('* chamada de m?todos instance')
System.Console.WriteLine('* null expression')
System.Console.WriteLine('* assert statement')
System.Console.WriteLine('* tuples (arrays) - operador v?rgula => a = 3, 5')
System.Console.WriteLine('* tuple unpacking - a, b  = 3, 5')
System.Console.WriteLine('* tuple indexing (a[0] = 1)')
System.Console.WriteLine('done * for item in tuple')
System.Console.WriteLine('* property access')
System.Console.WriteLine('* property assignment')
System.Console.WriteLine('* list creation [1, 2, 3]')
System.Console.WriteLine('* list indexing')
System.Console.WriteLine('done * bool (true, false)')
System.Console.WriteLine('* operadores de convers?o (operator bool, operator string, etc)')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 6')
System.Console.WriteLine('-----------')
System.Console.WriteLine('')
System.Console.WriteLine('* enum')
System.Console.WriteLine('* interface')
System.Console.WriteLine('* property')
System.Console.WriteLine('')
System.Console.WriteLine('Otimiza??es')
System.Console.WriteLine('-----------')
System.Console.WriteLine('* tail call prefix para fun�oes recursivas com a ScanDirectories do rgrep.boo')
System.Console.WriteLine('')
System.Console.WriteLine('* os m�todos com yield e m�todos que retornam iterators como enumerate devem')
System.Console.WriteLine('marcar o tipo retornado por IEnumerator.Current de forma que o compilador')
System.Console.WriteLine('possa otimizar a utiliza�ao de tais itens (no caso do enumerate, o compilador')
System.Console.WriteLine('saberia que sempre estaria lidando com um array e poderia gerar um unpacking')
System.Console.WriteLine('otimizado, etc);')
System.Console.WriteLine('* const expression unfolding')
System.Console.WriteLine('* proper tail recursion (fatorial)')
System.Console.WriteLine('* for item in array/tuple => traduzir indexa�aoo direta do array com checagem de')
System.Console.WriteLine('bounds, o JIT � capaz de detectar esses patterns e otimizar o c?digo de acordo')
System.Console.WriteLine('* a lista de tarefas migrou para http://bamboo.is-a-geek.org:8080/boo/wiki/TodoList')
System.Console.WriteLine('')
System.Console.WriteLine('Gera�ao de C�digo')
System.Console.WriteLine('=================')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 1 (hello.boo)')
System.Console.WriteLine('-----------------------')
System.Console.WriteLine('')
System.Console.WriteLine('done * bultins')
System.Console.WriteLine('done * local variables')
System.Console.WriteLine('done * expression interpolation (string formatting)')
System.Console.WriteLine(' ')
System.Console.WriteLine('Milestone 2 (debug)')
System.Console.WriteLine('-------------------')
System.Console.WriteLine('')
System.Console.WriteLine('done * line numbers na vers?o de depura??o')
System.Console.WriteLine('done * depurar com o mscordbg')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3 (helloforms.boo - using, m�todos est�ticos, cria�ao de objetos)')
System.Console.WriteLine('---------------------------------------------------------------------------')
System.Console.WriteLine('done * using XXX from XXX')
System.Console.WriteLine('done * criar objeto (ConstructorBinding)')
System.Console.WriteLine('done * membros de instancia (f.Show())')
System.Console.WriteLine('done * argumentos nomeados na cria�ao de objetos')
System.Console.WriteLine('done * membros est�ticos Application.Run()')
System.Console.WriteLine('done * resolu�ao de m�todos por argumentos de tipo compat�vel')
System.Console.WriteLine('done * simplificar c�digo:')
System.Console.WriteLine('	done * InternalTypeBinding e ExternalTypeBinding implements INameSpace: unificar codigo;')
System.Console.WriteLine('	done * o mesmo para InternalMethodBinding;')
System.Console.WriteLine('done * propriedades simples (f.Controls)')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.1 (grep.boo)')
System.Console.WriteLine('----------------------')
System.Console.WriteLine('')
System.Console.WriteLine('done * defini�ao de m�todos do m�dulo')
System.Console.WriteLine('done * chamada de m�todos do m�dulo')
System.Console.WriteLine('done * checagem de parametros estrita nas invoca�oes de m�todo')
System.Console.WriteLine('done * array unpacking')
System.Console.WriteLine('done * for item in array')
System.Console.WriteLine('done * for index, item in enumerate(array)')
System.Console.WriteLine('done * melhor mensagem de erro para array unpacking (checar length do array antes de acess�-lo ')
System.Console.WriteLine('e emitir exception "Unpack list of wrong size")')
System.Console.WriteLine('done * Quando o argumento do For ou Unpack for do tipo System.Object, nao fazer simplesmente cast')
System.Console.WriteLine('mas invocar RuntimeServices.GetEnumerable(object) que tenta encontrar a melhor versao de ')
System.Console.WriteLine('um enumer�vel para o objeto passado e, no caso de falha, exibe mensagem de erro mais adequada')
System.Console.WriteLine('done * RuntimeServices.GetEnumerable(object) deve suportar StreamReader')
System.Console.WriteLine('done * resolu�ao de m�todos')
System.Console.WriteLine('done * downcast (peverify grep)')
System.Console.WriteLine('* native regular expression support:')
System.Console.WriteLine('	* re expression /foo/')
System.Console.WriteLine('	done * match operator ~=')
System.Console.WriteLine('done * if stmt modifier')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.3 (replace.boo)')
System.Console.WriteLine('---------------------------')
System.Console.WriteLine('done * using Type (using Boo.IO.TextFile)')
System.Console.WriteLine('done * if string compare')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.4 (rgrep.boo)')
System.Console.WriteLine('-------------------------')
System.Console.WriteLine('done * recursive functions')
System.Console.WriteLine('done * namespace resolution for MemberReferenceExpression')
System.Console.WriteLine('done * using namespace as')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.5')
System.Console.WriteLine('-------------')
System.Console.WriteLine('done * IAstTransformer: uma maneira mais integrada de alterar os n�s da AST em uma visita')
System.Console.WriteLine('DepthFirst, a interface � parecida com IAstSwitcher com a diferen�a de que cada m�todo,')
System.Console.WriteLine('tem um valor de entrada e DE SAIDA que � o novo n� a ser colocado no lugar do n� visitado:')
System.Console.WriteLine('	void OnModule(Module module, ref Module newModule);')
System.Console.WriteLine('	void OnIfStatement(IfStatement statement, ref Statement newStatement)')
System.Console.WriteLine('	void OnBinaryExpression(BinaryExpression expression, ref Expression newExpression)')
System.Console.WriteLine('done * matar Boo.Util.ISwitch/ISwitcher, eles nao agregam valor algum no momento')
System.Console.WriteLine('done * quebrar AbstractCompilerStep em AbstractAstSwitcherStep extends AbstractCompilerStep')
System.Console.WriteLine('done * criar AbstractAstTransformerStep extends AbstractCompilerStep')
System.Console.WriteLine('done * unit tests para o compilador/interpretador')
System.Console.WriteLine('	done * criar uma pasta onde cada arquivo .boo � um testcase com um equivalente .out')
System.Console.WriteLine('	que cont�m a sa�da esperada')
System.Console.WriteLine('	done * o teste executa todos os passos da compila�ao normal e verifica o arquivo final com peverify')
System.Console.WriteLine('done * mover todos as constantes de tipo de BindingManager para Types')
System.Console.WriteLine('done * testes para enum (Criar enum em Boo.Tests e escrever alguns test cases)')
System.Console.WriteLine('done * LeaveDeclarationStatement retorna um ExpressionStatement(BinaryExpression()) de assignment e declara a vari�vel')
System.Console.WriteLine('* remover alguns dos EmitCastIfNeeded do EmitAssemblyStep e move-los para o SemanticStep que dever� criar CastExpression sempre que necess�rio')
System.Console.WriteLine('* AstAttribute vira IAstAttribute que implementa ICompilerStep')
System.Console.WriteLine('* Criar AbstractAstAttribute extends AbstractCompilerStep')
System.Console.WriteLine('* melhor tratamento de TypeReferences no parser, o tipo TypeReference desaparece')
System.Console.WriteLine('e passa a ser utilizado ReferenceExpression em seu lugar (para utilizar a resolu�ao padrao de membros, etc)')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.6 (revisao)')
System.Console.WriteLine('-----------------------')
System.Console.WriteLine('done * boxing (System.Console.WriteLine e StringFormatting)')
System.Console.WriteLine('* ? for deve criar um try { } finally { RuntimeServices.DisposeEnumerator(iterator); }')
System.Console.WriteLine('* transforma�ao de acesso de propriedade em invoca�ao de m�todo passa para SemanticStep')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.8')
System.Console.WriteLine('-------------')
System.Console.WriteLine('* raise')
System.Console.WriteLine('* statement modifiers:')
System.Console.WriteLine('	* unless')
System.Console.WriteLine('	* while')
System.Console.WriteLine('	* until')
System.Console.WriteLine('* try/catch/ensure')
System.Console.WriteLine('	')
System.Console.WriteLine('Milestone 4 (delegate support)')
System.Console.WriteLine('------------------------------')
System.Console.WriteLine('')
System.Console.WriteLine('done * automatic delegation instance creation')
System.Console.WriteLine('* automatic delegation interface adaptation')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 4.3 (otimiza�oes)')
System.Console.WriteLine('---------------------------')
System.Console.WriteLine('* compilador deve entender o atributo [EnumeratorItemType(typeof(string))] para TextFile e StreamReaderEnumerator')
System.Console.WriteLine('e declarar os tipos de acordo')
System.Console.WriteLine('* criar ModuleBinding e unificar com ModuleNamespace;')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 5')
System.Console.WriteLine('-----------')
System.Console.WriteLine('')
System.Console.WriteLine('* classes')
System.Console.WriteLine('* declara??o de campos')
System.Console.WriteLine('* declara??o de propriedades')
System.Console.WriteLine('* defini??o de m?todos')
System.Console.WriteLine('* expressoes simples com inteiros')
System.Console.WriteLine('* concatena�ao de strings')
System.Console.WriteLine('* concatena�ao de strings com inteiros')
System.Console.WriteLine('* classes devem ser serializ?veis')
System.Console.WriteLine('* cria??o de objetos (classes internas)')
System.Console.WriteLine('* chamada de m?todos est?ticos (classes internas)')
System.Console.WriteLine('* chamada de m?todos instance')
System.Console.WriteLine('* null expression')
System.Console.WriteLine('* assert statement')
System.Console.WriteLine('* tuples (arrays) - operador v?rgula => a = 3, 5')
System.Console.WriteLine('* tuple unpacking - a, b  = 3, 5')
System.Console.WriteLine('* tuple indexing (a[0] = 1)')
System.Console.WriteLine('done * for item in tuple')
System.Console.WriteLine('* property access')
System.Console.WriteLine('* property assignment')
System.Console.WriteLine('* list creation [1, 2, 3]')
System.Console.WriteLine('* list indexing')
System.Console.WriteLine('done * bool (true, false)')
System.Console.WriteLine('* operadores de convers?o (operator bool, operator string, etc)')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 6')
System.Console.WriteLine('-----------')
System.Console.WriteLine('')
System.Console.WriteLine('* enum')
System.Console.WriteLine('* interface')
System.Console.WriteLine('* property')
System.Console.WriteLine('')
System.Console.WriteLine('Otimiza??es')
System.Console.WriteLine('-----------')
System.Console.WriteLine('* tail call prefix para fun�oes recursivas com a ScanDirectories do rgrep.boo')
System.Console.WriteLine('')
System.Console.WriteLine('* os m�todos com yield e m�todos que retornam iterators como enumerate devem')
System.Console.WriteLine('marcar o tipo retornado por IEnumerator.Current de forma que o compilador')
System.Console.WriteLine('possa otimizar a utiliza�ao de tais itens (no caso do enumerate, o compilador')
System.Console.WriteLine('saberia que sempre estaria lidando com um array e poderia gerar um unpacking')
System.Console.WriteLine('otimizado, etc);')
System.Console.WriteLine('* const expression unfolding')
System.Console.WriteLine('* proper tail recursion (fatorial)')
System.Console.WriteLine('* for item in array/tuple => traduzir indexa�aoo direta do array com checagem de')
System.Console.WriteLine('bounds, o JIT � capaz de detectar esses patterns e otimizar o c?digo de acordo')
System.Console.WriteLine('* a lista de tarefas migrou para http://bamboo.is-a-geek.org:8080/boo/wiki/TodoList')
System.Console.WriteLine('')
System.Console.WriteLine('Gera�ao de C�digo')
System.Console.WriteLine('=================')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 1 (hello.boo)')
System.Console.WriteLine('-----------------------')
System.Console.WriteLine('')
System.Console.WriteLine('done * bultins')
System.Console.WriteLine('done * local variables')
System.Console.WriteLine('done * expression interpolation (string formatting)')
System.Console.WriteLine(' ')
System.Console.WriteLine('Milestone 2 (debug)')
System.Console.WriteLine('-------------------')
System.Console.WriteLine('')
System.Console.WriteLine('done * line numbers na vers?o de depura??o')
System.Console.WriteLine('done * depurar com o mscordbg')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3 (helloforms.boo - using, m�todos est�ticos, cria�ao de objetos)')
System.Console.WriteLine('---------------------------------------------------------------------------')
System.Console.WriteLine('done * using XXX from XXX')
System.Console.WriteLine('done * criar objeto (ConstructorBinding)')
System.Console.WriteLine('done * membros de instancia (f.Show())')
System.Console.WriteLine('done * argumentos nomeados na cria�ao de objetos')
System.Console.WriteLine('done * membros est�ticos Application.Run()')
System.Console.WriteLine('done * resolu�ao de m�todos por argumentos de tipo compat�vel')
System.Console.WriteLine('done * simplificar c�digo:')
System.Console.WriteLine('	done * InternalTypeBinding e ExternalTypeBinding implements INameSpace: unificar codigo;')
System.Console.WriteLine('	done * o mesmo para InternalMethodBinding;')
System.Console.WriteLine('done * propriedades simples (f.Controls)')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.1 (grep.boo)')
System.Console.WriteLine('----------------------')
System.Console.WriteLine('')
System.Console.WriteLine('done * defini�ao de m�todos do m�dulo')
System.Console.WriteLine('done * chamada de m�todos do m�dulo')
System.Console.WriteLine('done * checagem de parametros estrita nas invoca�oes de m�todo')
System.Console.WriteLine('done * array unpacking')
System.Console.WriteLine('done * for item in array')
System.Console.WriteLine('done * for index, item in enumerate(array)')
System.Console.WriteLine('done * melhor mensagem de erro para array unpacking (checar length do array antes de acess�-lo ')
System.Console.WriteLine('e emitir exception "Unpack list of wrong size")')
System.Console.WriteLine('done * Quando o argumento do For ou Unpack for do tipo System.Object, nao fazer simplesmente cast')
System.Console.WriteLine('mas invocar RuntimeServices.GetEnumerable(object) que tenta encontrar a melhor versao de ')
System.Console.WriteLine('um enumer�vel para o objeto passado e, no caso de falha, exibe mensagem de erro mais adequada')
System.Console.WriteLine('done * RuntimeServices.GetEnumerable(object) deve suportar StreamReader')
System.Console.WriteLine('done * resolu�ao de m�todos')
System.Console.WriteLine('done * downcast (peverify grep)')
System.Console.WriteLine('* native regular expression support:')
System.Console.WriteLine('	* re expression /foo/')
System.Console.WriteLine('	done * match operator ~=')
System.Console.WriteLine('done * if stmt modifier')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.3 (replace.boo)')
System.Console.WriteLine('---------------------------')
System.Console.WriteLine('done * using Type (using Boo.IO.TextFile)')
System.Console.WriteLine('done * if string compare')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.4 (rgrep.boo)')
System.Console.WriteLine('-------------------------')
System.Console.WriteLine('done * recursive functions')
System.Console.WriteLine('done * namespace resolution for MemberReferenceExpression')
System.Console.WriteLine('done * using namespace as')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.5')
System.Console.WriteLine('-------------')
System.Console.WriteLine('done * IAstTransformer: uma maneira mais integrada de alterar os n�s da AST em uma visita')
System.Console.WriteLine('DepthFirst, a interface � parecida com IAstSwitcher com a diferen�a de que cada m�todo,')
System.Console.WriteLine('tem um valor de entrada e DE SAIDA que � o novo n� a ser colocado no lugar do n� visitado:')
System.Console.WriteLine('	void OnModule(Module module, ref Module newModule);')
System.Console.WriteLine('	void OnIfStatement(IfStatement statement, ref Statement newStatement)')
System.Console.WriteLine('	void OnBinaryExpression(BinaryExpression expression, ref Expression newExpression)')
System.Console.WriteLine('done * matar Boo.Util.ISwitch/ISwitcher, eles nao agregam valor algum no momento')
System.Console.WriteLine('done * quebrar AbstractCompilerStep em AbstractAstSwitcherStep extends AbstractCompilerStep')
System.Console.WriteLine('done * criar AbstractAstTransformerStep extends AbstractCompilerStep')
System.Console.WriteLine('done * unit tests para o compilador/interpretador')
System.Console.WriteLine('	done * criar uma pasta onde cada arquivo .boo � um testcase com um equivalente .out')
System.Console.WriteLine('	que cont�m a sa�da esperada')
System.Console.WriteLine('	done * o teste executa todos os passos da compila�ao normal e verifica o arquivo final com peverify')
System.Console.WriteLine('done * mover todos as constantes de tipo de BindingManager para Types')
System.Console.WriteLine('done * testes para enum (Criar enum em Boo.Tests e escrever alguns test cases)')
System.Console.WriteLine('done * LeaveDeclarationStatement retorna um ExpressionStatement(BinaryExpression()) de assignment e declara a vari�vel')
System.Console.WriteLine('* remover alguns dos EmitCastIfNeeded do EmitAssemblyStep e move-los para o SemanticStep que dever� criar CastExpression sempre que necess�rio')
System.Console.WriteLine('* AstAttribute vira IAstAttribute que implementa ICompilerStep')
System.Console.WriteLine('* Criar AbstractAstAttribute extends AbstractCompilerStep')
System.Console.WriteLine('* melhor tratamento de TypeReferences no parser, o tipo TypeReference desaparece')
System.Console.WriteLine('e passa a ser utilizado ReferenceExpression em seu lugar (para utilizar a resolu�ao padrao de membros, etc)')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.6 (revisao)')
System.Console.WriteLine('-----------------------')
System.Console.WriteLine('done * boxing (System.Console.WriteLine e StringFormatting)')
System.Console.WriteLine('* ? for deve criar um try { } finally { RuntimeServices.DisposeEnumerator(iterator); }')
System.Console.WriteLine('* transforma�ao de acesso de propriedade em invoca�ao de m�todo passa para SemanticStep')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.8')
System.Console.WriteLine('-------------')
System.Console.WriteLine('* raise')
System.Console.WriteLine('* statement modifiers:')
System.Console.WriteLine('	* unless')
System.Console.WriteLine('	* while')
System.Console.WriteLine('	* until')
System.Console.WriteLine('* try/catch/ensure')
System.Console.WriteLine('	')
System.Console.WriteLine('Milestone 4 (delegate support)')
System.Console.WriteLine('------------------------------')
System.Console.WriteLine('')
System.Console.WriteLine('done * automatic delegation instance creation')
System.Console.WriteLine('* automatic delegation interface adaptation')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 4.3 (otimiza�oes)')
System.Console.WriteLine('---------------------------')
System.Console.WriteLine('* compilador deve entender o atributo [EnumeratorItemType(typeof(string))] para TextFile e StreamReaderEnumerator')
System.Console.WriteLine('e declarar os tipos de acordo')
System.Console.WriteLine('* criar ModuleBinding e unificar com ModuleNamespace;')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 5')
System.Console.WriteLine('-----------')
System.Console.WriteLine('')
System.Console.WriteLine('* classes')
System.Console.WriteLine('* declara??o de campos')
System.Console.WriteLine('* declara??o de propriedades')
System.Console.WriteLine('* defini??o de m?todos')
System.Console.WriteLine('* expressoes simples com inteiros')
System.Console.WriteLine('* concatena�ao de strings')
System.Console.WriteLine('* concatena�ao de strings com inteiros')
System.Console.WriteLine('* classes devem ser serializ?veis')
System.Console.WriteLine('* cria??o de objetos (classes internas)')
System.Console.WriteLine('* chamada de m?todos est?ticos (classes internas)')
System.Console.WriteLine('* chamada de m?todos instance')
System.Console.WriteLine('* null expression')
System.Console.WriteLine('* assert statement')
System.Console.WriteLine('* tuples (arrays) - operador v?rgula => a = 3, 5')
System.Console.WriteLine('* tuple unpacking - a, b  = 3, 5')
System.Console.WriteLine('* tuple indexing (a[0] = 1)')
System.Console.WriteLine('done * for item in tuple')
System.Console.WriteLine('* property access')
System.Console.WriteLine('* property assignment')
System.Console.WriteLine('* list creation [1, 2, 3]')
System.Console.WriteLine('* list indexing')
System.Console.WriteLine('done * bool (true, false)')
System.Console.WriteLine('* operadores de convers?o (operator bool, operator string, etc)')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 6')
System.Console.WriteLine('-----------')
System.Console.WriteLine('')
System.Console.WriteLine('* enum')
System.Console.WriteLine('* interface')
System.Console.WriteLine('* property')
System.Console.WriteLine('')
System.Console.WriteLine('Otimiza??es')
System.Console.WriteLine('-----------')
System.Console.WriteLine('* tail call prefix para fun�oes recursivas com a ScanDirectories do rgrep.boo')
System.Console.WriteLine('')
System.Console.WriteLine('* os m�todos com yield e m�todos que retornam iterators como enumerate devem')
System.Console.WriteLine('marcar o tipo retornado por IEnumerator.Current de forma que o compilador')
System.Console.WriteLine('possa otimizar a utiliza�ao de tais itens (no caso do enumerate, o compilador')
System.Console.WriteLine('saberia que sempre estaria lidando com um array e poderia gerar um unpacking')
System.Console.WriteLine('otimizado, etc);')
System.Console.WriteLine('* const expression unfolding')
System.Console.WriteLine('* proper tail recursion (fatorial)')
System.Console.WriteLine('* for item in array/tuple => traduzir indexa�aoo direta do array com checagem de')
System.Console.WriteLine('bounds, o JIT � capaz de detectar esses patterns e otimizar o c?digo de acordo')
System.Console.WriteLine('* a lista de tarefas migrou para http://bamboo.is-a-geek.org:8080/boo/wiki/TodoList')
System.Console.WriteLine('')
System.Console.WriteLine('Gera�ao de C�digo')
System.Console.WriteLine('=================')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 1 (hello.boo)')
System.Console.WriteLine('-----------------------')
System.Console.WriteLine('')
System.Console.WriteLine('done * bultins')
System.Console.WriteLine('done * local variables')
System.Console.WriteLine('done * expression interpolation (string formatting)')
System.Console.WriteLine(' ')
System.Console.WriteLine('Milestone 2 (debug)')
System.Console.WriteLine('-------------------')
System.Console.WriteLine('')
System.Console.WriteLine('done * line numbers na vers?o de depura??o')
System.Console.WriteLine('done * depurar com o mscordbg')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3 (helloforms.boo - using, m�todos est�ticos, cria�ao de objetos)')
System.Console.WriteLine('---------------------------------------------------------------------------')
System.Console.WriteLine('done * using XXX from XXX')
System.Console.WriteLine('done * criar objeto (ConstructorBinding)')
System.Console.WriteLine('done * membros de instancia (f.Show())')
System.Console.WriteLine('done * argumentos nomeados na cria�ao de objetos')
System.Console.WriteLine('done * membros est�ticos Application.Run()')
System.Console.WriteLine('done * resolu�ao de m�todos por argumentos de tipo compat�vel')
System.Console.WriteLine('done * simplificar c�digo:')
System.Console.WriteLine('	done * InternalTypeBinding e ExternalTypeBinding implements INameSpace: unificar codigo;')
System.Console.WriteLine('	done * o mesmo para InternalMethodBinding;')
System.Console.WriteLine('done * propriedades simples (f.Controls)')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.1 (grep.boo)')
System.Console.WriteLine('----------------------')
System.Console.WriteLine('')
System.Console.WriteLine('done * defini�ao de m�todos do m�dulo')
System.Console.WriteLine('done * chamada de m�todos do m�dulo')
System.Console.WriteLine('done * checagem de parametros estrita nas invoca�oes de m�todo')
System.Console.WriteLine('done * array unpacking')
System.Console.WriteLine('done * for item in array')
System.Console.WriteLine('done * for index, item in enumerate(array)')
System.Console.WriteLine('done * melhor mensagem de erro para array unpacking (checar length do array antes de acess�-lo ')
System.Console.WriteLine('e emitir exception "Unpack list of wrong size")')
System.Console.WriteLine('done * Quando o argumento do For ou Unpack for do tipo System.Object, nao fazer simplesmente cast')
System.Console.WriteLine('mas invocar RuntimeServices.GetEnumerable(object) que tenta encontrar a melhor versao de ')
System.Console.WriteLine('um enumer�vel para o objeto passado e, no caso de falha, exibe mensagem de erro mais adequada')
System.Console.WriteLine('done * RuntimeServices.GetEnumerable(object) deve suportar StreamReader')
System.Console.WriteLine('done * resolu�ao de m�todos')
System.Console.WriteLine('done * downcast (peverify grep)')
System.Console.WriteLine('* native regular expression support:')
System.Console.WriteLine('	* re expression /foo/')
System.Console.WriteLine('	done * match operator ~=')
System.Console.WriteLine('done * if stmt modifier')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.3 (replace.boo)')
System.Console.WriteLine('---------------------------')
System.Console.WriteLine('done * using Type (using Boo.IO.TextFile)')
System.Console.WriteLine('done * if string compare')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.4 (rgrep.boo)')
System.Console.WriteLine('-------------------------')
System.Console.WriteLine('done * recursive functions')
System.Console.WriteLine('done * namespace resolution for MemberReferenceExpression')
System.Console.WriteLine('done * using namespace as')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.5')
System.Console.WriteLine('-------------')
System.Console.WriteLine('done * IAstTransformer: uma maneira mais integrada de alterar os n�s da AST em uma visita')
System.Console.WriteLine('DepthFirst, a interface � parecida com IAstSwitcher com a diferen�a de que cada m�todo,')
System.Console.WriteLine('tem um valor de entrada e DE SAIDA que � o novo n� a ser colocado no lugar do n� visitado:')
System.Console.WriteLine('	void OnModule(Module module, ref Module newModule);')
System.Console.WriteLine('	void OnIfStatement(IfStatement statement, ref Statement newStatement)')
System.Console.WriteLine('	void OnBinaryExpression(BinaryExpression expression, ref Expression newExpression)')
System.Console.WriteLine('done * matar Boo.Util.ISwitch/ISwitcher, eles nao agregam valor algum no momento')
System.Console.WriteLine('done * quebrar AbstractCompilerStep em AbstractAstSwitcherStep extends AbstractCompilerStep')
System.Console.WriteLine('done * criar AbstractAstTransformerStep extends AbstractCompilerStep')
System.Console.WriteLine('done * unit tests para o compilador/interpretador')
System.Console.WriteLine('	done * criar uma pasta onde cada arquivo .boo � um testcase com um equivalente .out')
System.Console.WriteLine('	que cont�m a sa�da esperada')
System.Console.WriteLine('	done * o teste executa todos os passos da compila�ao normal e verifica o arquivo final com peverify')
System.Console.WriteLine('done * mover todos as constantes de tipo de BindingManager para Types')
System.Console.WriteLine('done * testes para enum (Criar enum em Boo.Tests e escrever alguns test cases)')
System.Console.WriteLine('done * LeaveDeclarationStatement retorna um ExpressionStatement(BinaryExpression()) de assignment e declara a vari�vel')
System.Console.WriteLine('* remover alguns dos EmitCastIfNeeded do EmitAssemblyStep e move-los para o SemanticStep que dever� criar CastExpression sempre que necess�rio')
System.Console.WriteLine('* AstAttribute vira IAstAttribute que implementa ICompilerStep')
System.Console.WriteLine('* Criar AbstractAstAttribute extends AbstractCompilerStep')
System.Console.WriteLine('* melhor tratamento de TypeReferences no parser, o tipo TypeReference desaparece')
System.Console.WriteLine('e passa a ser utilizado ReferenceExpression em seu lugar (para utilizar a resolu�ao padrao de membros, etc)')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.6 (revisao)')
System.Console.WriteLine('-----------------------')
System.Console.WriteLine('done * boxing (System.Console.WriteLine e StringFormatting)')
System.Console.WriteLine('* ? for deve criar um try { } finally { RuntimeServices.DisposeEnumerator(iterator); }')
System.Console.WriteLine('* transforma�ao de acesso de propriedade em invoca�ao de m�todo passa para SemanticStep')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 3.8')
System.Console.WriteLine('-------------')
System.Console.WriteLine('* raise')
System.Console.WriteLine('* statement modifiers:')
System.Console.WriteLine('	* unless')
System.Console.WriteLine('	* while')
System.Console.WriteLine('	* until')
System.Console.WriteLine('* try/catch/ensure')
System.Console.WriteLine('	')
System.Console.WriteLine('Milestone 4 (delegate support)')
System.Console.WriteLine('------------------------------')
System.Console.WriteLine('')
System.Console.WriteLine('done * automatic delegation instance creation')
System.Console.WriteLine('* automatic delegation interface adaptation')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 4.3 (otimiza�oes)')
System.Console.WriteLine('---------------------------')
System.Console.WriteLine('* compilador deve entender o atributo [EnumeratorItemType(typeof(string))] para TextFile e StreamReaderEnumerator')
System.Console.WriteLine('e declarar os tipos de acordo')
System.Console.WriteLine('* criar ModuleBinding e unificar com ModuleNamespace;')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 5')
System.Console.WriteLine('-----------')
System.Console.WriteLine('')
System.Console.WriteLine('* classes')
System.Console.WriteLine('* declara??o de campos')
System.Console.WriteLine('* declara??o de propriedades')
System.Console.WriteLine('* defini??o de m?todos')
System.Console.WriteLine('* expressoes simples com inteiros')
System.Console.WriteLine('* concatena�ao de strings')
System.Console.WriteLine('* concatena�ao de strings com inteiros')
System.Console.WriteLine('* classes devem ser serializ?veis')
System.Console.WriteLine('* cria??o de objetos (classes internas)')
System.Console.WriteLine('* chamada de m?todos est?ticos (classes internas)')
System.Console.WriteLine('* chamada de m?todos instance')
System.Console.WriteLine('* null expression')
System.Console.WriteLine('* assert statement')
System.Console.WriteLine('* tuples (arrays) - operador v?rgula => a = 3, 5')
System.Console.WriteLine('* tuple unpacking - a, b  = 3, 5')
System.Console.WriteLine('* tuple indexing (a[0] = 1)')
System.Console.WriteLine('done * for item in tuple')
System.Console.WriteLine('* property access')
System.Console.WriteLine('* property assignment')
System.Console.WriteLine('* list creation [1, 2, 3]')
System.Console.WriteLine('* list indexing')
System.Console.WriteLine('done * bool (true, false)')
System.Console.WriteLine('* operadores de convers?o (operator bool, operator string, etc)')
System.Console.WriteLine('')
System.Console.WriteLine('Milestone 6')
System.Console.WriteLine('-----------')
System.Console.WriteLine('')
System.Console.WriteLine('* enum')
System.Console.WriteLine('* interface')
System.Console.WriteLine('* property')
System.Console.WriteLine('')
System.Console.WriteLine('Otimiza??es')
System.Console.WriteLine('-----------')
System.Console.WriteLine('* tail call prefix para fun�oes recursivas com a ScanDirectories do rgrep.boo')
System.Console.WriteLine('')
System.Console.WriteLine('* os m�todos com yield e m�todos que retornam iterators como enumerate devem')
System.Console.WriteLine('marcar o tipo retornado por IEnumerator.Current de forma que o compilador')
System.Console.WriteLine('possa otimizar a utiliza�ao de tais itens (no caso do enumerate, o compilador')
System.Console.WriteLine('saberia que sempre estaria lidando com um array e poderia gerar um unpacking')
System.Console.WriteLine('otimizado, etc);')
System.Console.WriteLine('* const expression unfolding')
System.Console.WriteLine('* proper tail recursion (fatorial)')
System.Console.WriteLine('* for item in array/tuple => traduzir indexa�aoo direta do array com checagem de')
System.Console.WriteLine('bounds, o JIT � capaz de detectar esses patterns e otimizar o c?digo de acordo')
print('* a lista de tarefas migrou para http://bamboo.is-a-geek.org:8080/boo/wiki/TodoList')
print('')
print('Gera�ao de C�digo')
print('=================')
print('')
print('Milestone 1 (hello.boo)')
print('-----------------------')
print('')
print('done * bultins')
print('done * local variables')
print('done * expression interpolation (string formatting)')
print(' ')
print('Milestone 2 (debug)')
print('-------------------')
print('')
print('done * line numbers na vers?o de depura??o')
print('done * depurar com o mscordbg')
print('')
print('Milestone 3 (helloforms.boo - using, m�todos est�ticos, cria�ao de objetos)')
print('---------------------------------------------------------------------------')
print('done * using XXX from XXX')
print('done * criar objeto (ConstructorBinding)')
print('done * membros de instancia (f.Show())')
print('done * argumentos nomeados na cria�ao de objetos')
print('done * membros est�ticos Application.Run()')
print('done * resolu�ao de m�todos por argumentos de tipo compat�vel')
print('done * simplificar c�digo:')
print('	done * InternalTypeBinding e ExternalTypeBinding implements INameSpace: unificar codigo;')
print('	done * o mesmo para InternalMethodBinding;')
print('done * propriedades simples (f.Controls)')
print('')
print('Milestone 3.1 (grep.boo)')
print('----------------------')
print('')
print('done * defini�ao de m�todos do m�dulo')
print('done * chamada de m�todos do m�dulo')
print('done * checagem de parametros estrita nas invoca�oes de m�todo')
print('done * array unpacking')
print('done * for item in array')
print('done * for index, item in enumerate(array)')
print('done * melhor mensagem de erro para array unpacking (checar length do array antes de acess�-lo ')
print('e emitir exception "Unpack list of wrong size")')
print('done * Quando o argumento do For ou Unpack for do tipo System.Object, nao fazer simplesmente cast')
print('mas invocar RuntimeServices.GetEnumerable(object) que tenta encontrar a melhor versao de ')
print('um enumer�vel para o objeto passado e, no caso de falha, exibe mensagem de erro mais adequada')
print('done * RuntimeServices.GetEnumerable(object) deve suportar StreamReader')
print('done * resolu�ao de m�todos')
print('done * downcast (peverify grep)')
print('* native regular expression support:')
print('	* re expression /foo/')
print('	done * match operator ~=')
print('done * if stmt modifier')
print('')
print('Milestone 3.3 (replace.boo)')
print('---------------------------')
print('done * using Type (using Boo.IO.TextFile)')
print('done * if string compare')
print('')
print('Milestone 3.4 (rgrep.boo)')
print('-------------------------')
print('done * recursive functions')
print('done * namespace resolution for MemberReferenceExpression')
print('done * using namespace as')
print('')
print('Milestone 3.5')
print('-------------')
print('done * IAstTransformer: uma maneira mais integrada de alterar os n�s da AST em uma visita')
print('DepthFirst, a interface � parecida com IAstSwitcher com a diferen�a de que cada m�todo,')
print('tem um valor de entrada e DE SAIDA que � o novo n� a ser colocado no lugar do n� visitado:')
print('	void OnModule(Module module, ref Module newModule);')
print('	void OnIfStatement(IfStatement statement, ref Statement newStatement)')
print('	void OnBinaryExpression(BinaryExpression expression, ref Expression newExpression)')
print('done * matar Boo.Util.ISwitch/ISwitcher, eles nao agregam valor algum no momento')
print('done * quebrar AbstractCompilerStep em AbstractAstSwitcherStep extends AbstractCompilerStep')
print('done * criar AbstractAstTransformerStep extends AbstractCompilerStep')
print('done * unit tests para o compilador/interpretador')
print('	done * criar uma pasta onde cada arquivo .boo � um testcase com um equivalente .out')
print('	que cont�m a sa�da esperada')
print('	done * o teste executa todos os passos da compila�ao normal e verifica o arquivo final com peverify')
print('done * mover todos as constantes de tipo de BindingManager para Types')
print('done * testes para enum (Criar enum em Boo.Tests e escrever alguns test cases)')
print('done * LeaveDeclarationStatement retorna um ExpressionStatement(BinaryExpression()) de assignment e declara a vari�vel')
print('* remover alguns dos EmitCastIfNeeded do EmitAssemblyStep e move-los para o SemanticStep que dever� criar CastExpression sempre que necess�rio')
print('* AstAttribute vira IAstAttribute que implementa ICompilerStep')
print('* Criar AbstractAstAttribute extends AbstractCompilerStep')
print('* melhor tratamento de TypeReferences no parser, o tipo TypeReference desaparece')
print('e passa a ser utilizado ReferenceExpression em seu lugar (para utilizar a resolu�ao padrao de membros, etc)')
print('')
print('Milestone 3.6 (revisao)')
print('-----------------------')
print('done * boxing (print e StringFormatting)')
print('* ? for deve criar um try { } finally { RuntimeServices.DisposeEnumerator(iterator); }')
print('* transforma�ao de acesso de propriedade em invoca�ao de m�todo passa para SemanticStep')
print('')
print('Milestone 3.8')
print('-------------')
print('* raise')
print('* statement modifiers:')
print('	* unless')
print('	* while')
print('	* until')
print('* try/catch/ensure')
print('	')
print('Milestone 4 (delegate support)')
print('------------------------------')
print('')
print('done * automatic delegation instance creation')
print('* automatic delegation interface adaptation')
print('')
print('Milestone 4.3 (otimiza�oes)')
print('---------------------------')
print('* compilador deve entender o atributo [EnumeratorItemType(typeof(string))] para TextFile e StreamReaderEnumerator')
print('e declarar os tipos de acordo')
print('* criar ModuleBinding e unificar com ModuleNamespace;')
print('')
print('Milestone 5')
print('-----------')
print('')
print('* classes')
print('* declara??o de campos')
print('* declara??o de propriedades')
print('* defini??o de m?todos')
print('* expressoes simples com inteiros')
print('* concatena�ao de strings')
print('* concatena�ao de strings com inteiros')
print('* classes devem ser serializ?veis')
print('* cria??o de objetos (classes internas)')
print('* chamada de m?todos est?ticos (classes internas)')
print('* chamada de m?todos instance')
print('* null expression')
print('* assert statement')
print('* tuples (arrays) - operador v?rgula => a = 3, 5')
print('* tuple unpacking - a, b  = 3, 5')
print('* tuple indexing (a[0] = 1)')
print('done * for item in tuple')
print('* property access')
print('* property assignment')
print('* list creation [1, 2, 3]')
print('* list indexing')
print('done * bool (true, false)')
print('* operadores de convers?o (operator bool, operator string, etc)')
print('')
print('Milestone 6')
print('-----------')
print('')
print('* enum')
print('* interface')
print('* property')
print('')
print('Otimiza??es')
print('-----------')
print('* tail call prefix para fun�oes recursivas com a ScanDirectories do rgrep.boo')
print('')
print('* os m�todos com yield e m�todos que retornam iterators como enumerate devem')
print('marcar o tipo retornado por IEnumerator.Current de forma que o compilador')
print('possa otimizar a utiliza�ao de tais itens (no caso do enumerate, o compilador')
print('saberia que sempre estaria lidando com um array e poderia gerar um unpacking')
print('otimizado, etc);')
print('* const expression unfolding')
print('* proper tail recursion (fatorial)')
print('* for item in array/tuple => traduzir indexa�aoo direta do array com checagem de')
print('bounds, o JIT � capaz de detectar esses patterns e otimizar o c?digo de acordo')
print('* a lista de tarefas migrou para http://bamboo.is-a-geek.org:8080/boo/wiki/TodoList')
print('')
print('Gera�ao de C�digo')
print('=================')
print('')
print('Milestone 1 (hello.boo)')
print('-----------------------')
print('')
print('done * bultins')
print('done * local variables')
print('done * expression interpolation (string formatting)')
print(' ')
print('Milestone 2 (debug)')
print('-------------------')
print('')
print('done * line numbers na vers?o de depura??o')
print('done * depurar com o mscordbg')
print('')
print('Milestone 3 (helloforms.boo - using, m�todos est�ticos, cria�ao de objetos)')
print('---------------------------------------------------------------------------')
print('done * using XXX from XXX')
print('done * criar objeto (ConstructorBinding)')
print('done * membros de instancia (f.Show())')
print('done * argumentos nomeados na cria�ao de objetos')
print('done * membros est�ticos Application.Run()')
print('done * resolu�ao de m�todos por argumentos de tipo compat�vel')
print('done * simplificar c�digo:')
print('	done * InternalTypeBinding e ExternalTypeBinding implements INameSpace: unificar codigo;')
print('	done * o mesmo para InternalMethodBinding;')
print('done * propriedades simples (f.Controls)')
print('')
print('Milestone 3.1 (grep.boo)')
print('----------------------')
print('')
print('done * defini�ao de m�todos do m�dulo')
print('done * chamada de m�todos do m�dulo')
print('done * checagem de parametros estrita nas invoca�oes de m�todo')
print('done * array unpacking')
print('done * for item in array')
print('done * for index, item in enumerate(array)')
print('done * melhor mensagem de erro para array unpacking (checar length do array antes de acess�-lo ')
print('e emitir exception "Unpack list of wrong size")')
print('done * Quando o argumento do For ou Unpack for do tipo System.Object, nao fazer simplesmente cast')
print('mas invocar RuntimeServices.GetEnumerable(object) que tenta encontrar a melhor versao de ')
print('um enumer�vel para o objeto passado e, no caso de falha, exibe mensagem de erro mais adequada')
print('done * RuntimeServices.GetEnumerable(object) deve suportar StreamReader')
print('done * resolu�ao de m�todos')
print('done * downcast (peverify grep)')
print('* native regular expression support:')
print('	* re expression /foo/')
print('	done * match operator ~=')
print('done * if stmt modifier')
print('')
print('Milestone 3.3 (replace.boo)')
print('---------------------------')
print('done * using Type (using Boo.IO.TextFile)')
print('done * if string compare')
print('')
print('Milestone 3.4 (rgrep.boo)')
print('-------------------------')
print('done * recursive functions')
print('done * namespace resolution for MemberReferenceExpression')
print('done * using namespace as')
print('')
print('Milestone 3.5')
print('-------------')
print('done * IAstTransformer: uma maneira mais integrada de alterar os n�s da AST em uma visita')
print('DepthFirst, a interface � parecida com IAstSwitcher com a diferen�a de que cada m�todo,')
print('tem um valor de entrada e DE SAIDA que � o novo n� a ser colocado no lugar do n� visitado:')
print('	void OnModule(Module module, ref Module newModule);')
print('	void OnIfStatement(IfStatement statement, ref Statement newStatement)')
print('	void OnBinaryExpression(BinaryExpression expression, ref Expression newExpression)')
print('done * matar Boo.Util.ISwitch/ISwitcher, eles nao agregam valor algum no momento')
print('done * quebrar AbstractCompilerStep em AbstractAstSwitcherStep extends AbstractCompilerStep')
print('done * criar AbstractAstTransformerStep extends AbstractCompilerStep')
print('done * unit tests para o compilador/interpretador')
print('	done * criar uma pasta onde cada arquivo .boo � um testcase com um equivalente .out')
print('	que cont�m a sa�da esperada')
print('	done * o teste executa todos os passos da compila�ao normal e verifica o arquivo final com peverify')
print('done * mover todos as constantes de tipo de BindingManager para Types')
print('done * testes para enum (Criar enum em Boo.Tests e escrever alguns test cases)')
print('done * LeaveDeclarationStatement retorna um ExpressionStatement(BinaryExpression()) de assignment e declara a vari�vel')
print('* remover alguns dos EmitCastIfNeeded do EmitAssemblyStep e move-los para o SemanticStep que dever� criar CastExpression sempre que necess�rio')
print('* AstAttribute vira IAstAttribute que implementa ICompilerStep')
print('* Criar AbstractAstAttribute extends AbstractCompilerStep')
print('* melhor tratamento de TypeReferences no parser, o tipo TypeReference desaparece')
print('e passa a ser utilizado ReferenceExpression em seu lugar (para utilizar a resolu�ao padrao de membros, etc)')
print('')
print('Milestone 3.6 (revisao)')
print('-----------------------')
print('done * boxing (print e StringFormatting)')
print('* ? for deve criar um try { } finally { RuntimeServices.DisposeEnumerator(iterator); }')
print('* transforma�ao de acesso de propriedade em invoca�ao de m�todo passa para SemanticStep')
print('')
print('Milestone 3.8')
print('-------------')
print('* raise')
print('* statement modifiers:')
print('	* unless')
print('	* while')
print('	* until')
print('* try/catch/ensure')
print('	')
print('Milestone 4 (delegate support)')
print('------------------------------')
print('')
print('done * automatic delegation instance creation')
print('* automatic delegation interface adaptation')
print('')
print('Milestone 4.3 (otimiza�oes)')
print('---------------------------')
print('* compilador deve entender o atributo [EnumeratorItemType(typeof(string))] para TextFile e StreamReaderEnumerator')
print('e declarar os tipos de acordo')
print('* criar ModuleBinding e unificar com ModuleNamespace;')
print('')
print('Milestone 5')
print('-----------')
print('')
print('* classes')
print('* declara??o de campos')
print('* declara??o de propriedades')
print('* defini??o de m?todos')
print('* expressoes simples com inteiros')
print('* concatena�ao de strings')
print('* concatena�ao de strings com inteiros')
print('* classes devem ser serializ?veis')
print('* cria??o de objetos (classes internas)')
print('* chamada de m?todos est?ticos (classes internas)')
print('* chamada de m?todos instance')
print('* null expression')
print('* assert statement')
print('* tuples (arrays) - operador v?rgula => a = 3, 5')
print('* tuple unpacking - a, b  = 3, 5')
print('* tuple indexing (a[0] = 1)')
print('done * for item in tuple')
print('* property access')
print('* property assignment')
print('* list creation [1, 2, 3]')
print('* list indexing')
print('done * bool (true, false)')
print('* operadores de convers?o (operator bool, operator string, etc)')
print('')
print('Milestone 6')
print('-----------')
print('')
print('* enum')
print('* interface')
print('* property')
print('')
print('Otimiza??es')
print('-----------')
print('* tail call prefix para fun�oes recursivas com a ScanDirectories do rgrep.boo')
print('')
print('* os m�todos com yield e m�todos que retornam iterators como enumerate devem')
print('marcar o tipo retornado por IEnumerator.Current de forma que o compilador')
print('possa otimizar a utiliza�ao de tais itens (no caso do enumerate, o compilador')
print('saberia que sempre estaria lidando com um array e poderia gerar um unpacking')
print('otimizado, etc);')
print('* const expression unfolding')
print('* proper tail recursion (fatorial)')
print('* for item in array/tuple => traduzir indexa�aoo direta do array com checagem de')
print('bounds, o JIT � capaz de detectar esses patterns e otimizar o c?digo de acordo')
print('* a lista de tarefas migrou para http://bamboo.is-a-geek.org:8080/boo/wiki/TodoList')
print('')
print('Gera�ao de C�digo')
print('=================')
print('')
print('Milestone 1 (hello.boo)')
print('-----------------------')
print('')
print('done * bultins')
print('done * local variables')
print('done * expression interpolation (string formatting)')
print(' ')
print('Milestone 2 (debug)')
print('-------------------')
print('')
print('done * line numbers na vers?o de depura??o')
print('done * depurar com o mscordbg')
print('')
print('Milestone 3 (helloforms.boo - using, m�todos est�ticos, cria�ao de objetos)')
print('---------------------------------------------------------------------------')
print('done * using XXX from XXX')
print('done * criar objeto (ConstructorBinding)')
print('done * membros de instancia (f.Show())')
print('done * argumentos nomeados na cria�ao de objetos')
print('done * membros est�ticos Application.Run()')
print('done * resolu�ao de m�todos por argumentos de tipo compat�vel')
print('done * simplificar c�digo:')
print('	done * InternalTypeBinding e ExternalTypeBinding implements INameSpace: unificar codigo;')
print('	done * o mesmo para InternalMethodBinding;')
print('done * propriedades simples (f.Controls)')
print('')
print('Milestone 3.1 (grep.boo)')
print('----------------------')
print('')
print('done * defini�ao de m�todos do m�dulo')
print('done * chamada de m�todos do m�dulo')
print('done * checagem de parametros estrita nas invoca�oes de m�todo')
print('done * array unpacking')
print('done * for item in array')
print('done * for index, item in enumerate(array)')
print('done * melhor mensagem de erro para array unpacking (checar length do array antes de acess�-lo ')
print('e emitir exception "Unpack list of wrong size")')
print('done * Quando o argumento do For ou Unpack for do tipo System.Object, nao fazer simplesmente cast')
print('mas invocar RuntimeServices.GetEnumerable(object) que tenta encontrar a melhor versao de ')
print('um enumer�vel para o objeto passado e, no caso de falha, exibe mensagem de erro mais adequada')
print('done * RuntimeServices.GetEnumerable(object) deve suportar StreamReader')
print('done * resolu�ao de m�todos')
print('done * downcast (peverify grep)')
print('* native regular expression support:')
print('	* re expression /foo/')
print('	done * match operator ~=')
print('done * if stmt modifier')
print('')
print('Milestone 3.3 (replace.boo)')
print('---------------------------')
print('done * using Type (using Boo.IO.TextFile)')
print('done * if string compare')
print('')
print('Milestone 3.4 (rgrep.boo)')
print('-------------------------')
print('done * recursive functions')
print('done * namespace resolution for MemberReferenceExpression')
print('done * using namespace as')
print('')
print('Milestone 3.5')
print('-------------')
print('done * IAstTransformer: uma maneira mais integrada de alterar os n�s da AST em uma visita')
print('DepthFirst, a interface � parecida com IAstSwitcher com a diferen�a de que cada m�todo,')
print('tem um valor de entrada e DE SAIDA que � o novo n� a ser colocado no lugar do n� visitado:')
print('	void OnModule(Module module, ref Module newModule);')
print('	void OnIfStatement(IfStatement statement, ref Statement newStatement)')
print('	void OnBinaryExpression(BinaryExpression expression, ref Expression newExpression)')
print('done * matar Boo.Util.ISwitch/ISwitcher, eles nao agregam valor algum no momento')
print('done * quebrar AbstractCompilerStep em AbstractAstSwitcherStep extends AbstractCompilerStep')
print('done * criar AbstractAstTransformerStep extends AbstractCompilerStep')
print('done * unit tests para o compilador/interpretador')
print('	done * criar uma pasta onde cada arquivo .boo � um testcase com um equivalente .out')
print('	que cont�m a sa�da esperada')
print('	done * o teste executa todos os passos da compila�ao normal e verifica o arquivo final com peverify')
print('done * mover todos as constantes de tipo de BindingManager para Types')
print('done * testes para enum (Criar enum em Boo.Tests e escrever alguns test cases)')
print('done * LeaveDeclarationStatement retorna um ExpressionStatement(BinaryExpression()) de assignment e declara a vari�vel')
print('* remover alguns dos EmitCastIfNeeded do EmitAssemblyStep e move-los para o SemanticStep que dever� criar CastExpression sempre que necess�rio')
print('* AstAttribute vira IAstAttribute que implementa ICompilerStep')
print('* Criar AbstractAstAttribute extends AbstractCompilerStep')
print('* melhor tratamento de TypeReferences no parser, o tipo TypeReference desaparece')
print('e passa a ser utilizado ReferenceExpression em seu lugar (para utilizar a resolu�ao padrao de membros, etc)')
print('')
print('Milestone 3.6 (revisao)')
print('-----------------------')
print('done * boxing (print e StringFormatting)')
print('* ? for deve criar um try { } finally { RuntimeServices.DisposeEnumerator(iterator); }')
print('* transforma�ao de acesso de propriedade em invoca�ao de m�todo passa para SemanticStep')
print('')
print('Milestone 3.8')
print('-------------')
print('* raise')
print('* statement modifiers:')
print('	* unless')
print('	* while')
print('	* until')
print('* try/catch/ensure')
print('	')
print('Milestone 4 (delegate support)')
print('------------------------------')
print('')
print('done * automatic delegation instance creation')
print('* automatic delegation interface adaptation')
print('')
print('Milestone 4.3 (otimiza�oes)')
print('---------------------------')
print('* compilador deve entender o atributo [EnumeratorItemType(typeof(string))] para TextFile e StreamReaderEnumerator')
print('e declarar os tipos de acordo')
print('* criar ModuleBinding e unificar com ModuleNamespace;')
print('')
print('Milestone 5')
print('-----------')
print('')
print('* classes')
print('* declara??o de campos')
print('* declara??o de propriedades')
print('* defini??o de m?todos')
print('* expressoes simples com inteiros')
print('* concatena�ao de strings')
print('* concatena�ao de strings com inteiros')
print('* classes devem ser serializ?veis')
print('* cria??o de objetos (classes internas)')
print('* chamada de m?todos est?ticos (classes internas)')
print('* chamada de m?todos instance')
print('* null expression')
print('* assert statement')
print('* tuples (arrays) - operador v?rgula => a = 3, 5')
print('* tuple unpacking - a, b  = 3, 5')
print('* tuple indexing (a[0] = 1)')
print('done * for item in tuple')
print('* property access')
print('* property assignment')
print('* list creation [1, 2, 3]')
print('* list indexing')
print('done * bool (true, false)')
print('* operadores de convers?o (operator bool, operator string, etc)')
print('')
print('Milestone 6')
print('-----------')
print('')
print('* enum')
print('* interface')
print('* property')
print('')
print('Otimiza??es')
print('-----------')
print('* tail call prefix para fun�oes recursivas com a ScanDirectories do rgrep.boo')
print('')
print('* os m�todos com yield e m�todos que retornam iterators como enumerate devem')
print('marcar o tipo retornado por IEnumerator.Current de forma que o compilador')
print('possa otimizar a utiliza�ao de tais itens (no caso do enumerate, o compilador')
print('saberia que sempre estaria lidando com um array e poderia gerar um unpacking')
print('otimizado, etc);')
print('* const expression unfolding')
print('* proper tail recursion (fatorial)')
print('* for item in array/tuple => traduzir indexa�aoo direta do array com checagem de')
print('bounds, o JIT � capaz de detectar esses patterns e otimizar o c?digo de acordo')
print('* a lista de tarefas migrou para http://bamboo.is-a-geek.org:8080/boo/wiki/TodoList')
print('')
print('Gera�ao de C�digo')
print('=================')
print('')
print('Milestone 1 (hello.boo)')
print('-----------------------')
print('')
print('done * bultins')
print('done * local variables')
print('done * expression interpolation (string formatting)')
print(' ')
print('Milestone 2 (debug)')
print('-------------------')
print('')
print('done * line numbers na vers?o de depura??o')
print('done * depurar com o mscordbg')
print('')
print('Milestone 3 (helloforms.boo - using, m�todos est�ticos, cria�ao de objetos)')
print('---------------------------------------------------------------------------')
print('done * using XXX from XXX')
print('done * criar objeto (ConstructorBinding)')
print('done * membros de instancia (f.Show())')
print('done * argumentos nomeados na cria�ao de objetos')
print('done * membros est�ticos Application.Run()')
print('done * resolu�ao de m�todos por argumentos de tipo compat�vel')
print('done * simplificar c�digo:')
print('	done * InternalTypeBinding e ExternalTypeBinding implements INameSpace: unificar codigo;')
print('	done * o mesmo para InternalMethodBinding;')
print('done * propriedades simples (f.Controls)')
print('')
print('Milestone 3.1 (grep.boo)')
print('----------------------')
print('')
print('done * defini�ao de m�todos do m�dulo')
print('done * chamada de m�todos do m�dulo')
print('done * checagem de parametros estrita nas invoca�oes de m�todo')
print('done * array unpacking')
print('done * for item in array')
print('done * for index, item in enumerate(array)')
print('done * melhor mensagem de erro para array unpacking (checar length do array antes de acess�-lo ')
print('e emitir exception "Unpack list of wrong size")')
print('done * Quando o argumento do For ou Unpack for do tipo System.Object, nao fazer simplesmente cast')
print('mas invocar RuntimeServices.GetEnumerable(object) que tenta encontrar a melhor versao de ')
print('um enumer�vel para o objeto passado e, no caso de falha, exibe mensagem de erro mais adequada')
print('done * RuntimeServices.GetEnumerable(object) deve suportar StreamReader')
print('done * resolu�ao de m�todos')
print('done * downcast (peverify grep)')
print('* native regular expression support:')
print('	* re expression /foo/')
print('	done * match operator ~=')
print('done * if stmt modifier')
print('')
print('Milestone 3.3 (replace.boo)')
print('---------------------------')
print('done * using Type (using Boo.IO.TextFile)')
print('done * if string compare')
print('')
print('Milestone 3.4 (rgrep.boo)')
print('-------------------------')
print('done * recursive functions')
print('done * namespace resolution for MemberReferenceExpression')
print('done * using namespace as')
print('')
print('Milestone 3.5')
print('-------------')
print('done * IAstTransformer: uma maneira mais integrada de alterar os n�s da AST em uma visita')
print('DepthFirst, a interface � parecida com IAstSwitcher com a diferen�a de que cada m�todo,')
print('tem um valor de entrada e DE SAIDA que � o novo n� a ser colocado no lugar do n� visitado:')
print('	void OnModule(Module module, ref Module newModule);')
print('	void OnIfStatement(IfStatement statement, ref Statement newStatement)')
print('	void OnBinaryExpression(BinaryExpression expression, ref Expression newExpression)')
print('done * matar Boo.Util.ISwitch/ISwitcher, eles nao agregam valor algum no momento')
print('done * quebrar AbstractCompilerStep em AbstractAstSwitcherStep extends AbstractCompilerStep')
print('done * criar AbstractAstTransformerStep extends AbstractCompilerStep')
print('done * unit tests para o compilador/interpretador')
print('	done * criar uma pasta onde cada arquivo .boo � um testcase com um equivalente .out')
print('	que cont�m a sa�da esperada')
print('	done * o teste executa todos os passos da compila�ao normal e verifica o arquivo final com peverify')
print('done * mover todos as constantes de tipo de BindingManager para Types')
print('done * testes para enum (Criar enum em Boo.Tests e escrever alguns test cases)')
print('done * LeaveDeclarationStatement retorna um ExpressionStatement(BinaryExpression()) de assignment e declara a vari�vel')
print('* remover alguns dos EmitCastIfNeeded do EmitAssemblyStep e move-los para o SemanticStep que dever� criar CastExpression sempre que necess�rio')
print('* AstAttribute vira IAstAttribute que implementa ICompilerStep')
print('* Criar AbstractAstAttribute extends AbstractCompilerStep')
print('* melhor tratamento de TypeReferences no parser, o tipo TypeReference desaparece')
print('e passa a ser utilizado ReferenceExpression em seu lugar (para utilizar a resolu�ao padrao de membros, etc)')
print('')
print('Milestone 3.6 (revisao)')
print('-----------------------')
print('done * boxing (print e StringFormatting)')
print('* ? for deve criar um try { } finally { RuntimeServices.DisposeEnumerator(iterator); }')
print('* transforma�ao de acesso de propriedade em invoca�ao de m�todo passa para SemanticStep')
print('')
print('Milestone 3.8')
print('-------------')
print('* raise')
print('* statement modifiers:')
print('	* unless')
print('	* while')
print('	* until')
print('* try/catch/ensure')
print('	')
print('Milestone 4 (delegate support)')
print('------------------------------')
print('')
print('done * automatic delegation instance creation')
print('* automatic delegation interface adaptation')
print('')
print('Milestone 4.3 (otimiza�oes)')
print('---------------------------')
print('* compilador deve entender o atributo [EnumeratorItemType(typeof(string))] para TextFile e StreamReaderEnumerator')
print('e declarar os tipos de acordo')
print('* criar ModuleBinding e unificar com ModuleNamespace;')
print('')
print('Milestone 5')
print('-----------')
print('')
print('* classes')
print('* declara??o de campos')
print('* declara??o de propriedades')
print('* defini??o de m?todos')
print('* expressoes simples com inteiros')
print('* concatena�ao de strings')
print('* concatena�ao de strings com inteiros')
print('* classes devem ser serializ?veis')
print('* cria??o de objetos (classes internas)')
print('* chamada de m?todos est?ticos (classes internas)')
print('* chamada de m?todos instance')
print('* null expression')
print('* assert statement')
print('* tuples (arrays) - operador v?rgula => a = 3, 5')
print('* tuple unpacking - a, b  = 3, 5')
print('* tuple indexing (a[0] = 1)')
print('done * for item in tuple')
print('* property access')
print('* property assignment')
print('* list creation [1, 2, 3]')
print('* list indexing')
print('done * bool (true, false)')
print('* operadores de convers?o (operator bool, operator string, etc)')
print('')
print('Milestone 6')
print('-----------')
print('')
print('* enum')
print('* interface')
print('* property')
print('')
print('Otimiza??es')
print('-----------')
print('* tail call prefix para fun�oes recursivas com a ScanDirectories do rgrep.boo')
print('')
print('* os m�todos com yield e m�todos que retornam iterators como enumerate devem')
print('marcar o tipo retornado por IEnumerator.Current de forma que o compilador')
print('possa otimizar a utiliza�ao de tais itens (no caso do enumerate, o compilador')
print('saberia que sempre estaria lidando com um array e poderia gerar um unpacking')
print('otimizado, etc);')
print('* const expression unfolding')
print('* proper tail recursion (fatorial)')
print('* for item in array/tuple => traduzir indexa�aoo direta do array com checagem de')
print('bounds, o JIT � capaz de detectar esses patterns e otimizar o c?digo de acordo')
print('* a lista de tarefas migrou para http://bamboo.is-a-geek.org:8080/boo/wiki/TodoList')
print('')
print('Gera�ao de C�digo')
print('=================')
print('')
print('Milestone 1 (hello.boo)')
print('-----------------------')
print('')
print('done * bultins')
print('done * local variables')
print('done * expression interpolation (string formatting)')
print(' ')
print('Milestone 2 (debug)')
print('-------------------')
print('')
print('done * line numbers na vers?o de depura??o')
print('done * depurar com o mscordbg')
print('')
print('Milestone 3 (helloforms.boo - using, m�todos est�ticos, cria�ao de objetos)')
print('---------------------------------------------------------------------------')
print('done * using XXX from XXX')
print('done * criar objeto (ConstructorBinding)')
print('done * membros de instancia (f.Show())')
print('done * argumentos nomeados na cria�ao de objetos')
print('done * membros est�ticos Application.Run()')
print('done * resolu�ao de m�todos por argumentos de tipo compat�vel')
print('done * simplificar c�digo:')
print('	done * InternalTypeBinding e ExternalTypeBinding implements INameSpace: unificar codigo;')
print('	done * o mesmo para InternalMethodBinding;')
print('done * propriedades simples (f.Controls)')
print('')
print('Milestone 3.1 (grep.boo)')
print('----------------------')
print('')
print('done * defini�ao de m�todos do m�dulo')
print('done * chamada de m�todos do m�dulo')
print('done * checagem de parametros estrita nas invoca�oes de m�todo')
print('done * array unpacking')
print('done * for item in array')
print('done * for index, item in enumerate(array)')
print('done * melhor mensagem de erro para array unpacking (checar length do array antes de acess�-lo ')
print('e emitir exception "Unpack list of wrong size")')
print('done * Quando o argumento do For ou Unpack for do tipo System.Object, nao fazer simplesmente cast')
print('mas invocar RuntimeServices.GetEnumerable(object) que tenta encontrar a melhor versao de ')
print('um enumer�vel para o objeto passado e, no caso de falha, exibe mensagem de erro mais adequada')
print('done * RuntimeServices.GetEnumerable(object) deve suportar StreamReader')
print('done * resolu�ao de m�todos')
print('done * downcast (peverify grep)')
print('* native regular expression support:')
print('	* re expression /foo/')
print('	done * match operator ~=')
print('done * if stmt modifier')
print('')
print('Milestone 3.3 (replace.boo)')
print('---------------------------')
print('done * using Type (using Boo.IO.TextFile)')
print('done * if string compare')
print('')
print('Milestone 3.4 (rgrep.boo)')
print('-------------------------')
print('done * recursive functions')
print('done * namespace resolution for MemberReferenceExpression')
print('done * using namespace as')
print('')
print('Milestone 3.5')
print('-------------')
print('done * IAstTransformer: uma maneira mais integrada de alterar os n�s da AST em uma visita')
print('DepthFirst, a interface � parecida com IAstSwitcher com a diferen�a de que cada m�todo,')
print('tem um valor de entrada e DE SAIDA que � o novo n� a ser colocado no lugar do n� visitado:')
print('	void OnModule(Module module, ref Module newModule);')
print('	void OnIfStatement(IfStatement statement, ref Statement newStatement)')
print('	void OnBinaryExpression(BinaryExpression expression, ref Expression newExpression)')
print('done * matar Boo.Util.ISwitch/ISwitcher, eles nao agregam valor algum no momento')
print('done * quebrar AbstractCompilerStep em AbstractAstSwitcherStep extends AbstractCompilerStep')
print('done * criar AbstractAstTransformerStep extends AbstractCompilerStep')
print('done * unit tests para o compilador/interpretador')
print('	done * criar uma pasta onde cada arquivo .boo � um testcase com um equivalente .out')
print('	que cont�m a sa�da esperada')
print('	done * o teste executa todos os passos da compila�ao normal e verifica o arquivo final com peverify')
print('done * mover todos as constantes de tipo de BindingManager para Types')
print('done * testes para enum (Criar enum em Boo.Tests e escrever alguns test cases)')
print('done * LeaveDeclarationStatement retorna um ExpressionStatement(BinaryExpression()) de assignment e declara a vari�vel')
print('* remover alguns dos EmitCastIfNeeded do EmitAssemblyStep e move-los para o SemanticStep que dever� criar CastExpression sempre que necess�rio')
print('* AstAttribute vira IAstAttribute que implementa ICompilerStep')
print('* Criar AbstractAstAttribute extends AbstractCompilerStep')
print('* melhor tratamento de TypeReferences no parser, o tipo TypeReference desaparece')
print('e passa a ser utilizado ReferenceExpression em seu lugar (para utilizar a resolu�ao padrao de membros, etc)')
print('')
print('Milestone 3.6 (revisao)')
print('-----------------------')
print('done * boxing (print e StringFormatting)')
print('* ? for deve criar um try { } finally { RuntimeServices.DisposeEnumerator(iterator); }')
print('* transforma�ao de acesso de propriedade em invoca�ao de m�todo passa para SemanticStep')
print('')
print('Milestone 3.8')
print('-------------')
print('* raise')
print('* statement modifiers:')
print('	* unless')
print('	* while')
print('	* until')
print('* try/catch/ensure')
print('	')
print('Milestone 4 (delegate support)')
print('------------------------------')
print('')
print('done * automatic delegation instance creation')
print('* automatic delegation interface adaptation')
print('')
print('Milestone 4.3 (otimiza�oes)')
print('---------------------------')
print('* compilador deve entender o atributo [EnumeratorItemType(typeof(string))] para TextFile e StreamReaderEnumerator')
print('e declarar os tipos de acordo')
print('* criar ModuleBinding e unificar com ModuleNamespace;')
print('')
print('Milestone 5')
print('-----------')
print('')
print('* classes')
print('* declara??o de campos')
print('* declara??o de propriedades')
print('* defini??o de m?todos')
print('* expressoes simples com inteiros')
print('* concatena�ao de strings')
print('* concatena�ao de strings com inteiros')
print('* classes devem ser serializ?veis')
print('* cria??o de objetos (classes internas)')
print('* chamada de m?todos est?ticos (classes internas)')
print('* chamada de m?todos instance')
print('* null expression')
print('* assert statement')
print('* tuples (arrays) - operador v?rgula => a = 3, 5')
print('* tuple unpacking - a, b  = 3, 5')
print('* tuple indexing (a[0] = 1)')
print('done * for item in tuple')
print('* property access')
print('* property assignment')
print('* list creation [1, 2, 3]')
print('* list indexing')
print('done * bool (true, false)')
print('* operadores de convers?o (operator bool, operator string, etc)')
print('')
print('Milestone 6')
print('-----------')
print('')
print('* enum')
print('* interface')
print('* property')
print('')
print('Otimiza??es')
print('-----------')
print('* tail call prefix para fun�oes recursivas com a ScanDirectories do rgrep.boo')
print('')
print('* os m�todos com yield e m�todos que retornam iterators como enumerate devem')
print('marcar o tipo retornado por IEnumerator.Current de forma que o compilador')
print('possa otimizar a utiliza�ao de tais itens (no caso do enumerate, o compilador')
print('saberia que sempre estaria lidando com um array e poderia gerar um unpacking')
print('otimizado, etc);')
print('* const expression unfolding')
print('* proper tail recursion (fatorial)')
print('* for item in array/tuple => traduzir indexa�aoo direta do array com checagem de')
print('bounds, o JIT � capaz de detectar esses patterns e otimizar o c?digo de acordo')
