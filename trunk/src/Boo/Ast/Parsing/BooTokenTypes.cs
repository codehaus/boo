// $ANTLR 2.7.2: "boo.g" -> "BooLexer.cs"$

namespace Boo.Ast.Parsing
{
	public class BooTokenTypes
	{
		public const int EOF = 1;
		public const int NULL_TREE_LOOKAHEAD = 3;
		public const int TIMESPAN = 4;
		public const int ESEPARATOR = 5;
		public const int INDENT = 6;
		public const int DEDENT = 7;
		public const int COMPILATION_UNIT = 8;
		public const int PARAMETERS = 9;
		public const int PARAMETER = 10;
		public const int ELIST = 11;
		public const int DLIST = 12;
		public const int TYPE = 13;
		public const int CALL = 14;
		public const int STMT = 15;
		public const int BLOCK = 16;
		public const int FIELD = 17;
		public const int MODIFIERS = 18;
		public const int MODULE = 19;
		public const int LITERAL = 20;
		public const int LIST_LITERAL = 21;
		public const int UNPACKING = 22;
		public const int AND = 23;
		public const int AS = 24;
		public const int BREAK = 25;
		public const int CONTINUE = 26;
		public const int CATCH = 27;
		public const int CLASS = 28;
		public const int CONSTRUCTOR = 29;
		public const int DEF = 30;
		public const int ELSE = 31;
		public const int ENSURE = 32;
		public const int ENUM = 33;
		public const int FINAL = 34;
		public const int FROM = 35;
		public const int FOR = 36;
		public const int FALSE = 37;
		public const int GET = 38;
		public const int GIVEN = 39;
		public const int INTERFACE = 40;
		public const int INTERNAL = 41;
		public const int IS = 42;
		public const int IF = 43;
		public const int IN = 44;
		public const int KINDOF = 45;
		public const int NOT = 46;
		public const int NULL = 47;
		public const int OR = 48;
		public const int OTHERWISE = 49;
		public const int PASS = 50;
		public const int PACKAGE = 51;
		public const int PROPERTY = 52;
		public const int PUBLIC = 53;
		public const int PROTECTED = 54;
		public const int PRIVATE = 55;
		public const int RAISE = 56;
		public const int RETURN = 57;
		public const int RETRY = 58;
		public const int SET = 59;
		public const int SELF = 60;
		public const int SUPER = 61;
		public const int STATIC = 62;
		public const int SUCCESS = 63;
		public const int TRY = 64;
		public const int TRANSIENT = 65;
		public const int TRUE = 66;
		public const int UNLESS = 67;
		public const int USING = 68;
		public const int UNTIL = 69;
		public const int VOID = 70;
		public const int WHEN = 71;
		public const int WHILE = 72;
		public const int YIELD = 73;
		public const int EOS = 74;
		public const int TRIPLE_QUOTED_STRING = 75;
		public const int ID = 76;
		public const int ASSIGN = 77;
		public const int LBRACK = 78;
		public const int COMMA = 79;
		public const int RBRACK = 80;
		public const int LPAREN = 81;
		public const int RPAREN = 82;
		public const int COLON = 83;
		public const int QMARK = 84;
		public const int SUM_OPERATOR = 85;
		public const int MULT_OPERATOR = 86;
		public const int INCREMENT = 87;
		public const int DECREMENT = 88;
		public const int CMP_OPERATOR = 89;
		public const int DOT = 90;
		public const int INT = 91;
		public const int DOUBLE_QUOTED_STRING = 92;
		public const int SINGLE_QUOTED_STRING = 93;
		public const int LBRACE = 94;
		public const int RBRACE = 95;
		public const int RE_LITERAL = 96;
		public const int SL_COMMENT = 97;
		public const int WS = 98;
		public const int ESCAPED_EXPRESSION = 99;
		public const int DQS_ESC = 100;
		public const int SQS_ESC = 101;
		public const int SESC = 102;
		public const int RE_CHAR = 103;
		public const int RE_ESC = 104;
		public const int ID_LETTER = 105;
		public const int DIGIT = 106;
		
	}
}
